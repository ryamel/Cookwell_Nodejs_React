{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/featured.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BrowseCard from '../components/browseCard';\nimport './featured.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet source; // featured titles need to be added inside the browseCard on the first of the line\n\nclass Featured extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      featCardData: [],\n      latestCardData: [],\n      randomCardData: [],\n      loadFooter: false\n    };\n    source = axios.CancelToken.source();\n    this.getFeatured = this.getFeatured.bind(this);\n    this.getLatest = this.getLatest.bind(this);\n    this.getMixItUp = this.getMixItUp.bind(this);\n  }\n\n  getFeatured() {\n    axios.get(\"/api/recipes/getfeatured/\", {\n      cancelToken: source.token\n    }).then(res => {\n      console.log('featured', res.data);\n      this.setState({\n        featCardData: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  getLatest() {\n    axios.get(\"/api/recipes/getrecent/\", {\n      cancelToken: source.token\n    }).then(res => {\n      console.log('recent', res.data);\n      this.setState({\n        latestCardData: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  getMixItUp() {\n    axios.get(\"/api/recipes/getrandom/\", {\n      cancelToken: source.token\n    }).then(res => {\n      console.log('random', res.data);\n      this.setState({\n        randomCardData: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    // no need to use relative file path for '/api/recipes' with fetch. Fetch will auto find server.js in root dir\n    Promise.all([this.getFeatured(), this.getLatest(), this.getMixItUp()]).then(this.setState({\n      loadFooter: true\n    }));\n  }\n\n  componentWillUnmount() {\n    if (source) source.cancel();\n  }\n\n  render() {\n    const {\n      error,\n      isFeatLoaded,\n      isLatestLoaded\n    } = this.state;\n\n    if (this.state.latestCardData.length < 1 || this.state.featCardData.length < 1 || this.state.randomCardData.length < 1) {\n      return null;\n    } else {\n      const {\n        featCardData,\n        latestCardData,\n        randomCardData\n      } = this.state;\n      return (\n        /*#__PURE__*/\n        // index and firstCardHeader propeties are used to conditionally render the featured and latest headers inside the first BrowseCard component. \n        // this is because the headers must be rendered inside the first BrowseCard components in order for the headers to have the same behaviour as the grid cards. Oulined by the css grid attributes.\n        _jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"index-grid\",\n            children: featCardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n              img: cardData.img,\n              description: cardData.description,\n              author: cardData.authid.name,\n              aId: cardData.authid._id,\n              rtitle: cardData.title,\n              index: index,\n              edit: false,\n              firstCardHeader: \"Featured\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"index-grid\",\n            children: latestCardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n              img: cardData.img,\n              description: cardData.description,\n              author: cardData.authid.name,\n              aId: cardData.authid._id,\n              rtitle: cardData.title,\n              index: index,\n              edit: false,\n              firstCardHeader: \"Most Recent\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"index-grid\",\n            children: randomCardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n              img: cardData.img,\n              description: cardData.description,\n              author: cardData.authid.name,\n              aId: cardData.authid._id,\n              rtitle: cardData.title,\n              index: index,\n              edit: false,\n              firstCardHeader: \"Mix It Up\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            isLoaded: this.state.loadFooter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this)\n      );\n    }\n  }\n\n}\n\nexport default Featured;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/featured.jsx"],"names":["React","Component","Link","BrowseCard","Footer","axios","source","Featured","constructor","props","state","featCardData","latestCardData","randomCardData","loadFooter","CancelToken","getFeatured","bind","getLatest","getMixItUp","get","cancelToken","token","then","res","console","log","data","setState","catch","err","componentDidMount","Promise","all","componentWillUnmount","cancel","render","error","isFeatLoaded","isLatestLoaded","length","map","cardData","index","img","description","authid","name","_id","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BrowseCard from '../components/browseCard';\nimport './featured.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios';\nlet source;\n\n// featured titles need to be added inside the browseCard on the first of the line\n\nclass Featured extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tfeatCardData: [],\n\t\t\tlatestCardData: [],\n\t\t\trandomCardData: [],\n\t\t\tloadFooter: false\n\t\t}\n\t\tsource = axios.CancelToken.source();\n\t\tthis.getFeatured = this.getFeatured.bind(this);\n\t\tthis.getLatest = this.getLatest.bind(this);\n\t\tthis.getMixItUp = this.getMixItUp.bind(this);\n\t}\n\n\tgetFeatured() {\n\t\taxios.get(\"/api/recipes/getfeatured/\", {cancelToken: source.token})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log('featured', res.data);\n\t\t\t\tthis.setState({featCardData: res.data});\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\tgetLatest() {\n\t\taxios.get(\"/api/recipes/getrecent/\", {cancelToken: source.token})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log('recent', res.data);\n\t\t\t\tthis.setState({latestCardData: res.data});\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\tgetMixItUp() {\n\t\taxios.get(\"/api/recipes/getrandom/\", {cancelToken: source.token})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log('random', res.data);\n\t\t\t\tthis.setState({randomCardData: res.data});\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\tcomponentDidMount() {\n\t\t// no need to use relative file path for '/api/recipes' with fetch. Fetch will auto find server.js in root dir\n\t\tPromise.all([this.getFeatured(), this.getLatest(), this.getMixItUp()])\n\t\t\t.then(this.setState({loadFooter: true}));\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (source) source.cancel();\n\t}\n\n\n\n\n\trender() {\n\t\tconst { error, isFeatLoaded, isLatestLoaded } = this.state;\n\t\n\n\t\tif ( this.state.latestCardData.length < 1 || this.state.featCardData.length < 1 ||  this.state.randomCardData.length < 1) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst { featCardData, latestCardData, randomCardData } = this.state;\n\n\t\t\treturn (\n\t\t\t\t// index and firstCardHeader propeties are used to conditionally render the featured and latest headers inside the first BrowseCard component. \n\t\t\t\t// this is because the headers must be rendered inside the first BrowseCard components in order for the headers to have the same behaviour as the grid cards. Oulined by the css grid attributes.\n\t\t\t\t<React.Fragment>\n\n\t\t\t\t\t<div className='index-grid'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfeatCardData.map((cardData, index) => \n\t\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\t\tauthor={cardData.authid.name} \n\t\t\t\t\t\t\t\t\taId={cardData.authid._id} \n\t\t\t\t\t\t\t\t\trtitle={cardData.title} \n\t\t\t\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tfirstCardHeader='Featured' \n\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='index-grid'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlatestCardData.map((cardData, index) => \n\t\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\t\tauthor={cardData.authid.name} \n\t\t\t\t\t\t\t\t\taId={cardData.authid._id} \n\t\t\t\t\t\t\t\t\trtitle={cardData.title} \n\t\t\t\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tfirstCardHeader='Most Recent' \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='index-grid'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trandomCardData.map((cardData, index) => \n\t\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\t\tauthor={cardData.authid.name} \n\t\t\t\t\t\t\t\t\taId={cardData.authid._id} \n\t\t\t\t\t\t\t\t\trtitle={cardData.title} \n\t\t\t\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tfirstCardHeader='Mix It Up' \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<Footer isLoaded={this.state.loadFooter} />\n\n\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t}\n}\n\n\n\n\n\n\nexport default Featured;"]},"metadata":{},"sourceType":"module"}
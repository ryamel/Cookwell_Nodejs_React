{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/recipes.jsx\";\nimport React, { Component } from \"react\";\nimport BrowseCard from '../components/browseCard';\nimport './recipes.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios'; // added task. Pagination using random recipes.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Recipes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cardData: [],\n      isLoaded: false,\n      loadFooter: false\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    axios.get(\"/api/recipes/\").then(res => {\n      this.setState({\n        cardData: res.data,\n        isLoaded: true,\n        loadFooter: true\n      });\n    });\n  }\n\n  handleScroll(e) {\n    // console.log('hei');\n    // let element = e.target\n    //    if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n    //    \tconsole.log('BOTTOM!');\n    //    }\n    console.log('trig');\n    let scrollTop = e.srcElement.body.scrollTop,\n        itemTranslate = Math.min(0, scrollTop / 3 - 60);\n    console.log(e.target); // this.setState({\n    // \ttransform: itemTranslate\n    // });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return null;\n    } else {\n      const {\n        cardData\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"browse-body\",\n        onScroll: this.handleScroll,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-grid-container\",\n          children: cardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n            img: cardData.img,\n            description: cardData.description,\n            author: cardData.authorName,\n            rtitle: cardData.title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          isLoaded: this.state.loadFooter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nexport default Recipes;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/recipes.jsx"],"names":["React","Component","BrowseCard","Footer","axios","Recipes","constructor","state","cardData","isLoaded","loadFooter","handleScroll","bind","componentDidMount","window","addEventListener","get","then","res","setState","data","e","console","log","scrollTop","srcElement","body","itemTranslate","Math","min","target","componentWillUnmount","removeEventListener","render","map","index","img","description","authorName","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AAGA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC/BK,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,QAAQ,EAAE,KAFE;AAGZC,MAAAA,UAAU,EAAE;AAHA,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,YAAvC;AAEAP,IAAAA,KAAK,CAACY,GAAN,CAAU,eAAV,EACEC,IADF,CACOC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AACbX,QAAAA,QAAQ,EAAEU,GAAG,CAACE,IADD;AAEbX,QAAAA,QAAQ,EAAE,IAFG;AAGbC,QAAAA,UAAU,EAAE;AAHC,OAAd;AAKA,KAPH;AASA;;AAEDC,EAAAA,YAAY,CAACU,CAAD,EAAI;AACf;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIC,SAAS,GAAGH,CAAC,CAACI,UAAF,CAAaC,IAAb,CAAkBF,SAAlC;AAAA,QACIG,aAAa,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,SAAS,GAAC,CAAV,GAAc,EAA1B,CADpB;AAEIF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACS,MAAd,EATW,CAUf;AACA;AACA;AAGA;;AAIDC,EAAAA,oBAAoB,GAAG;AACnBjB,IAAAA,MAAM,CAACkB,mBAAP,CAA2B,QAA3B,EAAqC,KAAKrB,YAA1C;AACH;;AAKDsB,EAAAA,MAAM,GAAG;AACR,UAAM;AAACxB,MAAAA;AAAD,QAAc,KAAKF,KAAzB;;AAGA,QAAI,CAACE,QAAL,EAAe;AACd,aAAO,IAAP;AACA,KAFD,MAEO;AACN,YAAM;AAAED,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,0BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,QAAQ,EAAE,KAAKI,YAA5C;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,oBACEH,QAAQ,CAAC0B,GAAT,CAAa,CAAC1B,QAAD,EAAW2B,KAAX,kBACb,QAAC,UAAD;AAEC,YAAA,GAAG,EAAE3B,QAAQ,CAAC4B,GAFf;AAGC,YAAA,WAAW,EAAE5B,QAAQ,CAAC6B,WAHvB;AAIC,YAAA,MAAM,EAAE7B,QAAQ,CAAC8B,UAJlB;AAKC,YAAA,MAAM,EAAE9B,QAAQ,CAAC+B;AALlB,aACMJ,KADN;AAAA;AAAA;AAAA;AAAA,kBADA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWG;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAeA;AACD;;AA3E8B;;AAmFhC,eAAeL,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport BrowseCard from '../components/browseCard';\nimport './recipes.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios';\n\n// added task. Pagination using random recipes.\n\n\nclass Recipes extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcardData: [],\n\t\t\tisLoaded: false,\n\t\t\tloadFooter: false\n\t\t}\n\t\tthis.handleScroll = this.handleScroll.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('scroll', this.handleScroll);\n\n\t\taxios.get(\"/api/recipes/\")\n\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcardData: res.data,\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\tloadFooter: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\thandleScroll(e) {\n\t\t// console.log('hei');\n\t\t// let element = e.target\n\t //    if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n\t //    \tconsole.log('BOTTOM!');\n\t //    }\n\t\tconsole.log('trig');\n\t\tlet scrollTop = e.srcElement.body.scrollTop,\n\t\t    itemTranslate = Math.min(0, scrollTop/3 - 60);\n\t\t    console.log(e.target);\n\t\t// this.setState({\n\t\t// \ttransform: itemTranslate\n\t\t// });\n\t\n\t\n\t}\n\n\n\n\tcomponentWillUnmount() {\n\t    window.removeEventListener('scroll', this.handleScroll);\n\t}\n\n\n\n\n\trender() {\n\t\tconst {isLoaded } = this.state;\n\n\n\t\tif (!isLoaded) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst { cardData } = this.state;\n\t\t\treturn (\n\t\t\t\t<div className='browse-body' onScroll={this.handleScroll}>\n\t\t\t\t\t<div className='recipe-grid-container'>\n\t\t\t\t\t\t{cardData.map((cardData, index) => \n\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\tauthor={cardData.authorName} \n\t\t\t\t\t\t\t\trtitle={cardData.title} />\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Footer isLoaded={this.state.loadFooter} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\n\n\n\n\n\nexport default Recipes;"]},"metadata":{},"sourceType":"module"}
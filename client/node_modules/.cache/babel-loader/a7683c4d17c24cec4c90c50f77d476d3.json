{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/recipes.jsx\";\nimport React, { Component } from \"react\";\nimport BrowseCard from '../components/browseCard';\nimport './recipes.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios'; // added task. Pagination using random recipes.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Recipes extends Component {\n  constructor() {\n    super();\n\n    this.handleScroll = e => {\n      console.log();\n      let element = e.target;\n\n      if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n        console.log('BOTTOM!');\n      }\n    };\n\n    this.state = {\n      cardData: [],\n      isLoaded: false,\n      loadFooter: false\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/recipes/\").then(res => {\n      this.setState({\n        cardData: res.data,\n        isLoaded: true,\n        loadFooter: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return null;\n    } else {\n      const {\n        cardData\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"browse-body\",\n        onScroll: this.handleScroll,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-grid-container\",\n          children: cardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n            img: cardData.img,\n            description: cardData.description,\n            author: cardData.authorName,\n            rtitle: cardData.title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          isLoaded: this.state.loadFooter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nexport default Recipes;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/recipes.jsx"],"names":["React","Component","BrowseCard","Footer","axios","Recipes","constructor","handleScroll","e","console","log","element","target","scrollHeight","scrollTop","clientHeight","state","cardData","isLoaded","loadFooter","bind","componentDidMount","get","then","res","setState","data","render","map","index","img","description","authorName","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AAGA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC/BK,EAAAA,WAAW,GAAG;AACb;;AADa,SAsBdC,YAtBc,GAsBCC,CAAC,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR;AACA,UAAIC,OAAO,GAAGH,CAAC,CAACI,MAAhB;;AACG,UAAID,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,SAA/B,KAA6CH,OAAO,CAACI,YAAzD,EAAuE;AACtEN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA;AACJ,KA5Ba;;AAEb,SAAKM,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,QAAQ,EAAE,KAFE;AAGZC,MAAAA,UAAU,EAAE;AAHA,KAAb;AAKA,SAAKZ,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnBjB,IAAAA,KAAK,CAACkB,GAAN,CAAU,eAAV,EACEC,IADF,CACOC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AACbR,QAAAA,QAAQ,EAAEO,GAAG,CAACE,IADD;AAEbR,QAAAA,QAAQ,EAAE,IAFG;AAGbC,QAAAA,UAAU,EAAE;AAHC,OAAd;AAKA,KAPH;AASA;;AAYDQ,EAAAA,MAAM,GAAG;AACR,UAAM;AAACT,MAAAA;AAAD,QAAc,KAAKF,KAAzB;;AAGA,QAAI,CAACE,QAAL,EAAe;AACd,aAAO,IAAP;AACA,KAFD,MAEO;AACN,YAAM;AAAED,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,0BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,QAAQ,EAAE,KAAKT,YAA5C;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,oBACEU,QAAQ,CAACW,GAAT,CAAa,CAACX,QAAD,EAAWY,KAAX,kBACb,QAAC,UAAD;AAEC,YAAA,GAAG,EAAEZ,QAAQ,CAACa,GAFf;AAGC,YAAA,WAAW,EAAEb,QAAQ,CAACc,WAHvB;AAIC,YAAA,MAAM,EAAEd,QAAQ,CAACe,UAJlB;AAKC,YAAA,MAAM,EAAEf,QAAQ,CAACgB;AALlB,aACMJ,KADN;AAAA;AAAA;AAAA;AAAA,kBADA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWG;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAeA;AACD;;AAzD8B;;AAiEhC,eAAed,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport BrowseCard from '../components/browseCard';\nimport './recipes.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios';\n\n// added task. Pagination using random recipes.\n\n\nclass Recipes extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcardData: [],\n\t\t\tisLoaded: false,\n\t\t\tloadFooter: false\n\t\t}\n\t\tthis.handleScroll = this.handleScroll.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get(\"/api/recipes/\")\n\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcardData: res.data,\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\tloadFooter: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\thandleScroll = e => {\n\t\tconsole.log()\n\t\tlet element = e.target\n\t    if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n\t    \tconsole.log('BOTTOM!');\n\t    }\n\t}\n\n\n\n\trender() {\n\t\tconst {isLoaded } = this.state;\n\n\n\t\tif (!isLoaded) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst { cardData } = this.state;\n\t\t\treturn (\n\t\t\t\t<div className='browse-body' onScroll={this.handleScroll}>\n\t\t\t\t\t<div className='recipe-grid-container'>\n\t\t\t\t\t\t{cardData.map((cardData, index) => \n\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\tauthor={cardData.authorName} \n\t\t\t\t\t\t\t\trtitle={cardData.title} />\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Footer isLoaded={this.state.loadFooter} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\n\n\n\n\n\nexport default Recipes;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/account-pages/account-recipes.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport BrowseCard from '../../components/browseCard';\nimport queryString from 'query-string';\nimport Footer from '../../components/footer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet source;\n\nclass accountRecipes extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      recipes: [],\n      isLoaded: false,\n      msg: ''\n    }; // this.handleMsg = this.handleMsg.bind(this);\n\n    source = axios.CancelToken.source();\n  }\n\n  componentDidMount() {\n    axios.get('/api/recipes/getuserrecipesprivate', {\n      cancelToken: source.token\n    }).then(res => {\n      console.log(res.data);\n      this.setState({\n        recipes: res.data,\n        isLoaded: true\n      });\n    }).catch(err => console.log(err)); // read url params message, then place message into state so it can be displayed on screen\n    // var url = window.location.href;\n    // var urlParam = 'msg';\n    // urlParam = urlParam.replace(/[\\[\\]]/g, '\\\\$&');\n    //    var regex = new RegExp('[?&]' + urlParam + '(=([^&#]*)|&|#|$)'), \n    //    \tresults = regex.exec(url);\n    //    if (!results || !results[2]) {\n    //    \treturn null;\n    //    } else {\n    //    \tlet m = decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    //    \tm = m.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    //    \tthis.setState({msg: m});\n    //    }\n  } // handleMsg(msg){\n  // \tif (msg && msg.length > 0) {\n  // \t\tconst timer = setTimeout(() => {\n  // \t\t\tthis.setState({msg: ''});\n  // \t\t}, 8000);\n  // \t\treturn <div className='bannerMsgBar'>{msg}</div>;\n  // \t}\n  // }\n\n\n  componentWillUnmount() {\n    if (source) {\n      source.cancel();\n    }\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loading-spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    } else if (this.state.isLoaded && this.state.recipes.length < 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loading-spacer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"msg-spacer\",\n          children: \"Your recipes will appear here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accountContent minBodyHeight\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"cardContainer\",\n            children: this.state.recipes.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n              img: cardData.img,\n              description: cardData.description,\n              author: cardData.authid.name,\n              aId: cardData.authid._id,\n              edit: true,\n              rtitle: cardData.title,\n              rid: cardData._id\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nexport default accountRecipes;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/account-pages/account-recipes.jsx"],"names":["React","Component","Link","BrowseCard","queryString","Footer","axios","source","accountRecipes","constructor","props","state","recipes","isLoaded","msg","CancelToken","componentDidMount","get","cancelToken","token","then","res","console","log","data","setState","catch","err","componentWillUnmount","cancel","render","length","map","cardData","index","img","description","authid","name","_id","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport BrowseCard from '../../components/browseCard';\nimport queryString from 'query-string';\nimport Footer from '../../components/footer';\nimport axios from 'axios';\nlet source;\n\n\nclass accountRecipes extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = { \n\t\t\trecipes: [],\n\t\t\tisLoaded: false,\n\t\t\tmsg: ''\n\t\t};\n\t\t// this.handleMsg = this.handleMsg.bind(this);\n\t\tsource = axios.CancelToken.source();\n\t}\n\n\n\tcomponentDidMount() {\n\t\taxios.get('/api/recipes/getuserrecipesprivate', {cancelToken: source.token})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tthis.setState({\n\t\t\t\t\trecipes: res.data,\n\t\t\t\t\tisLoaded: true\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\n\t\t// read url params message, then place message into state so it can be displayed on screen\n\t\t// var url = window.location.href;\n\t\t// var urlParam = 'msg';\n\t\t// urlParam = urlParam.replace(/[\\[\\]]/g, '\\\\$&');\n\t //    var regex = new RegExp('[?&]' + urlParam + '(=([^&#]*)|&|#|$)'), \n\t //    \tresults = regex.exec(url);\n\t //    if (!results || !results[2]) {\n\t //    \treturn null;\n\t //    } else {\n\t //    \tlet m = decodeURIComponent(results[2].replace(/\\+/g, ' '));\n\t //    \tm = m.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n\t //    \tthis.setState({msg: m});\n\t //    }\n\t\t    \n\t}\n\n\n\t// handleMsg(msg){\n\t// \tif (msg && msg.length > 0) {\n\t// \t\tconst timer = setTimeout(() => {\n\t// \t\t\tthis.setState({msg: ''});\n\t// \t\t}, 8000);\n\t// \t\treturn <div className='bannerMsgBar'>{msg}</div>;\n\t// \t}\n\t// }\n\n\tcomponentWillUnmount() {\n\t\tif (source) {\n\t\t\tsource.cancel();\n\t\t}\n\t}\n\n\trender() {\n\t\tif (!this.state.isLoaded) {\n\t\t\treturn <div id='loading-spacer'></div>;\n\t\t} else if (this.state.isLoaded && this.state.recipes.length < 1) {\n\t\t\treturn (\n\t\t\t\t<div id='loading-spacer'>\n\t\t\t\t\t<div id='msg-spacer'>\n\t\t\t\t\t\tYour recipes will appear here\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{/*{ this.handleMsg(this.state.msg) }*/}\n\t\t\t\t\t<div className=\"accountContent minBodyHeight\">\n\t\t\t\t\t\t<div id=\"cardContainer\">\n\t\t\t\t\t\t\t{\tthis.state.recipes.map((cardData, index) => \n\t\t\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\t\t\tauthor={cardData.authid.name} \n\t\t\t\t\t\t\t\t\t\taId={cardData.authid._id} \n\t\t\t\t\t\t\t\t\t\tedit={true}\n\t\t\t\t\t\t\t\t\t\trtitle={cardData.title}\n\t\t\t\t\t\t\t\t\t\trid={cardData._id}\n\t\t\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/*<Footer isLoaded={this.state.isLoaded} />*/}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t}\n}\n\n\n\n\n\nexport default accountRecipes;\n\n"]},"metadata":{},"sourceType":"module"}
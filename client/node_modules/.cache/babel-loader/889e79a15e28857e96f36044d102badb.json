{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/components/ingredientElement.jsx\";\nimport React, { Component } from \"react\";\nimport { units } from '../searchOptions'; // You must adjust \"/api/recipes/upload\" server route code if this string is modified \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction IngredientElement(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field-container-add\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"quantityd\",\n        name: \"qty\",\n        placeholder: \"Quantity\",\n        value: props.ingr.qty,\n        onChange: e => props.handleInput(e.target.name, e.target.value, props.number)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"typeSelectUnit\",\n        name: \"unit\",\n        value: props.ingr.unit,\n        onChange: e => props.handleInput(e.target.name, e.target.value, props.number),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"unitDefault\",\n          children: \"unit of quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 5\n        }, this), units.map((unit, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: unit,\n          children: unit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"ingrd\",\n        name: \"gtext\",\n        placeholder: \"Ingredient Name\",\n        value: props.ingr.gtext,\n        onChange: e => props.handleInput(e.target.name, e.target.value, props.number)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 6\n  }, this);\n}\n\n_c = IngredientElement;\nexport default IngredientElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientElement\");","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/components/ingredientElement.jsx"],"names":["React","Component","units","IngredientElement","props","ingr","qty","e","handleInput","target","name","value","number","unit","map","index","gtext"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAEjC,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACF;AACC,QAAA,SAAS,EAAC,WADX;AAEC,QAAA,IAAI,EAAC,KAFN;AAGC,QAAA,WAAW,EAAC,UAHb;AAIC,QAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,GAJnB;AAKC,QAAA,QAAQ,EAAGC,CAAD,IAAOH,KAAK,CAACI,WAAN,CAAkBD,CAAC,CAACE,MAAF,CAASC,IAA3B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C,EAAiDP,KAAK,CAACQ,MAAvD;AALlB;AAAA;AAAA;AAAA;AAAA,cADE,eASF;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAA+C,QAAA,KAAK,EAAER,KAAK,CAACC,IAAN,CAAWQ,IAAjE;AAAuE,QAAA,QAAQ,EAAGN,CAAD,IAAOH,KAAK,CAACI,WAAN,CAAkBD,CAAC,CAACE,MAAF,CAASC,IAA3B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C,EAAiDP,KAAK,CAACQ,MAAvD,CAAxF;AAAA,gCACC;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAGEV,KAAK,CAACY,GAAN,CAAU,CAACD,IAAD,EAAOE,KAAP,kBACT;AAAoB,UAAA,KAAK,EAAEF,IAA3B;AAAA,oBAAmCA;AAAnC,WAAaE,KAAb;AAAA;AAAA;AAAA;AAAA,gBADD,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cATE,eAkBF;AACC,QAAA,SAAS,EAAC,OADX;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,WAAW,EAAC,iBAHb;AAIC,QAAA,KAAK,EAAEX,KAAK,CAACC,IAAN,CAAWW,KAJnB;AAKC,QAAA,QAAQ,EAAGT,CAAD,IAAOH,KAAK,CAACI,WAAN,CAAkBD,CAAC,CAACE,MAAF,CAASC,IAA3B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C,EAAiDP,KAAK,CAACQ,MAAvD;AALlB;AAAA;AAAA;AAAA;AAAA,cAlBE;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCA;;KAlCQT,iB;AAsCT,eAAeA,iBAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { units } from '../searchOptions';\n\n// You must adjust \"/api/recipes/upload\" server route code if this string is modified \n\nfunction IngredientElement(props) {\n\n\treturn (\n    \t<div className='field-container-add'>\n    \t<div className='te'>\n\t\t\t<input \n\t\t\t\tclassName='quantityd' \n\t\t\t\tname='qty' \n\t\t\t\tplaceholder='Quantity' \n\t\t\t\tvalue={props.ingr.qty}\n\t\t\t\tonChange={(e) => props.handleInput(e.target.name, e.target.value, props.number)}\n\t\t\t\t/>\n\n\t\t\t<select className='typeSelectUnit' name='unit' value={props.ingr.unit} onChange={(e) => props.handleInput(e.target.name, e.target.value, props.number)}>\n\t\t\t\t<option className='unitDefault'>unit of quantity</option> \n\t\t\t\t{\n\t\t\t\t\tunits.map((unit, index) => \n\t\t\t\t\t\t<option key={index} value={unit} >{unit}</option>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</select>\n\n\t\t\t<input \n\t\t\t\tclassName='ingrd' \n\t\t\t\tname='gtext' \n\t\t\t\tplaceholder='Ingredient Name' \n\t\t\t\tvalue={props.ingr.gtext}\n\t\t\t\tonChange={(e) => props.handleInput(e.target.name, e.target.value, props.number)}\n\t\t\t\t/>\n\t\t</div>\n\t\t</div>  \n\t);\n\n\n}\n\n\n\nexport default IngredientElement;"]},"metadata":{},"sourceType":"module"}
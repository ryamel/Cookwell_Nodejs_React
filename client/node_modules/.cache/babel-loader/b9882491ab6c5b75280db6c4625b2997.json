{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/reset-password.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './reset-password.sass';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet source; // load url params\n// send params to route api\n// confirm valid on client\n// \n\nclass ResetPassword extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      uid: '',\n      token: '',\n      msg: '',\n      pwd: '',\n      pwdRepeat: ''\n    };\n    source = axios.CancelToken.source();\n    this.updatePwd = this.updatePwd.bind(this);\n    this.handleMsg = this.handleMsg.bind(this);\n    this.getParameterByName = this.getParameterByName.bind(this);\n  }\n\n  componentDidMount() {\n    let uid = this.getParameterByName('uid');\n    let token = this.getParameterByName('token');\n    if (uid && token) this.setState({\n      uid: uid,\n      token: token\n    });\n  }\n\n  getParameterByName(name, url = window.location.href) {\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  handleMsg(msg) {\n    if (msg.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logMsg\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  updatePwd() {\n    const body = {\n      uid: this.state.uid,\n      token: this.state.token,\n      pwd: this.state.pwd,\n      pwdRepeat: this.state.pwdRepeat\n    };\n    axios.post('/api/mail/pwdresetupdate', body, {\n      cancelToken: source.token\n    }).then(res => {\n      this.setState({\n        msg: res.data\n      });\n    }).catch(error => {\n      if (typeof error.res.data !== 'undefined') this.setState({\n        msg: error.res.data\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (source) source.cancel();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"newPwdTitle\",\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pwdreset-msg\",\n        children: \"Please enter your new password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"pwd\",\n        placeholder: \"Password\",\n        value: this.state.pwd,\n        onChange: e => this.setState({\n          pwd: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"pwd-repeat\",\n        placeholder: \"Repeat password\",\n        value: this.state.pwdRepeat,\n        onChange: e => this.setState({\n          pwdRepeat: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"reset-password-submit\",\n        onClick: () => this.updatePwd(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logMsg\",\n        children: this.state.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/reset-password.jsx"],"names":["React","Component","Link","axios","source","ResetPassword","constructor","props","state","uid","token","msg","pwd","pwdRepeat","CancelToken","updatePwd","bind","handleMsg","getParameterByName","componentDidMount","setState","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","length","body","post","cancelToken","then","res","data","catch","error","componentWillUnmount","cancel","render","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './reset-password.sass';\nimport axios from 'axios';\nlet source;\n\n// load url params\n\n// send params to route api\n\n// confirm valid on client\n\n// \n\n\nclass ResetPassword extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tuid: '',\n\t\t\ttoken: '',\n\t\t\tmsg: '',\n\t\t\tpwd: '',\n\t\t\tpwdRepeat: ''\n\t\t}\n\t\tsource = axios.CancelToken.source();\n\t\tthis.updatePwd = this.updatePwd.bind(this);\n\t\tthis.handleMsg = this.handleMsg.bind(this);\n\t\tthis.getParameterByName = this.getParameterByName.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tlet uid = this.getParameterByName('uid');\n\t\tlet token = this.getParameterByName('token');\n\t\tif (uid && token) this.setState({uid: uid, token: token});\n\t}\n\n\tgetParameterByName(name, url = window.location.href) {\n\t    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n\t    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n\t        results = regex.exec(url);\n\t    if (!results) return null;\n\t    if (!results[2]) return '';\n\t    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n\t}\n\n\n\thandleMsg(msg) {\n\t\tif (msg.length > 0) {\n\t\t\treturn <div className='logMsg'>{msg}</div>;\n\t\t}\n\t}\n\n\tupdatePwd() {\n\t\tconst body = ({\n\t\t\tuid: this.state.uid, \n\t\t\ttoken: this.state.token,\n\t\t\tpwd: this.state.pwd,\n\t\t\tpwdRepeat: this.state.pwdRepeat\n\t\t});\n\n\t\taxios.post('/api/mail/pwdresetupdate', body, {cancelToken: source.token})\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({msg: res.data});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (typeof error.res.data !== 'undefined') this.setState({msg: error.res.data});\n\t\t\t})\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (source) source.cancel();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"loginContainer\">\n\t\t\t\t<div id=\"newPwdTitle\">Password Reset</div>\n\t\t\t\t<div id='pwdreset-msg'>Please enter your new password</div>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tname=\"pwd\" \n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\tvalue={this.state.pwd}\n\t\t\t\t\tonChange={(e) => this.setState({pwd: e.target.value})}\n\t\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tname=\"pwd-repeat\" \n\t\t\t\t\tplaceholder=\"Repeat password\"\n\t\t\t\t\tvalue={this.state.pwdRepeat}\n\t\t\t\t\tonChange={(e) => this.setState({pwdRepeat: e.target.value})}\n\t\t\t\t\t/>\n\t\t\t\t<button type=\"submit\" name=\"reset-password-submit\" onClick={() => this.updatePwd()}>Submit</button>\n\t\t\t\t<div className='logMsg'>{this.state.msg}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/featured.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BrowseCard from '../components/browseCard';\nimport './featured.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios'; // featured titles need to be added inside the browseCard on the first of the line\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Featured extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      featCardData: [],\n      latestCardData: [],\n      randomCardData: [],\n      loadFooter: false\n    };\n    this.getFeatured = this.getFeatured.bind(this);\n    this.getLatest = this.getLatest.bind(this);\n    this.getMixItUp = this.getMixItUp.bind(this);\n  }\n\n  getFeatured() {\n    axios.get(\"/api/recipes/getfeatured/\").then(res => {\n      console.log(res.data);\n      this.setState({\n        featCardData: res.data\n      });\n    });\n  }\n\n  getLatest() {\n    axios.get(\"/api/recipes/getrecent/\").then(res => {\n      this.setState({\n        latestCardData: res.data\n      });\n    });\n  }\n\n  getMixItUp() {\n    axios.get(\"/api/recipes/getrandom/\").then(res => {\n      this.setState({\n        randomCardData: res.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    // no need to use relative file path for '/api/recipes' with fetch. Fetch will auto find server.js in root dir\n    Promise.all([this.getFeatured(), this.getLatest(), this.getMixItUp()]).then(this.setState({\n      loadFooter: true\n    }));\n  }\n\n  render() {\n    const {\n      error,\n      isFeatLoaded,\n      isLatestLoaded\n    } = this.state;\n\n    if (this.state.latestCardData.length < 1 || this.state.featCardData.length < 1 || this.state.randomCardData.length < 1) {\n      return null;\n    } else {\n      const {\n        featCardData,\n        latestCardData,\n        randomCardData\n      } = this.state;\n      return (\n        /*#__PURE__*/\n        // index and firstCardHeader propeties are used to conditionally render the featured and latest headers inside the first BrowseCard component. \n        // this is because the headers must be rendered inside the first BrowseCard components in order for the headers to have the same behaviour as the grid cards. Oulined by the css grid attributes.\n        _jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"index-grid\",\n            children: featCardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n              img: cardData.img,\n              description: cardData.description,\n              author: cardData.authorName,\n              rtitle: cardData.title,\n              index: index,\n              edit: false,\n              firstCardHeader: \"Featured\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"index-grid\",\n            children: latestCardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n              img: cardData.img,\n              description: cardData.description,\n              author: cardData.authorName,\n              rtitle: cardData.title,\n              index: index,\n              edit: false,\n              firstCardHeader: \"Most Recent\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"index-grid\",\n            children: randomCardData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n              img: cardData.img,\n              description: cardData.description,\n              author: cardData.authorName,\n              rtitle: cardData.title,\n              index: index,\n              edit: false,\n              firstCardHeader: \"Mix It Up\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            isLoaded: this.state.loadFooter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this)\n      );\n    }\n  }\n\n}\n\nexport default Featured;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/featured.jsx"],"names":["React","Component","Link","BrowseCard","Footer","axios","Featured","constructor","props","state","featCardData","latestCardData","randomCardData","loadFooter","getFeatured","bind","getLatest","getMixItUp","get","then","res","console","log","data","setState","componentDidMount","Promise","all","render","error","isFeatLoaded","isLatestLoaded","length","map","cardData","index","img","description","authorName","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BrowseCard from '../components/browseCard';\nimport './featured.sass';\nimport Footer from '../components/footer';\nimport axios from 'axios';\n\n// featured titles need to be added inside the browseCard on the first of the line\n\nclass Featured extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tfeatCardData: [],\n\t\t\tlatestCardData: [],\n\t\t\trandomCardData: [],\n\t\t\tloadFooter: false\n\t\t}\n\t\tthis.getFeatured = this.getFeatured.bind(this);\n\t\tthis.getLatest = this.getLatest.bind(this);\n\t\tthis.getMixItUp = this.getMixItUp.bind(this);\n\t}\n\n\tgetFeatured() {\n\t\taxios.get(\"/api/recipes/getfeatured/\")\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tthis.setState({featCardData: res.data});\n\t\t\t})\n\t}\n\n\tgetLatest() {\n\t\taxios.get(\"/api/recipes/getrecent/\")\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({latestCardData: res.data});\n\t\t\t})\n\t}\n\n\tgetMixItUp() {\n\t\taxios.get(\"/api/recipes/getrandom/\")\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({randomCardData: res.data});\n\t\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\t// no need to use relative file path for '/api/recipes' with fetch. Fetch will auto find server.js in root dir\n\t\tPromise.all([this.getFeatured(), this.getLatest(), this.getMixItUp()])\n\t\t\t.then(this.setState({loadFooter: true}));\n\t}\n\n\n\n\n\trender() {\n\t\tconst { error, isFeatLoaded, isLatestLoaded } = this.state;\n\t\n\n\t\tif ( this.state.latestCardData.length < 1 || this.state.featCardData.length < 1 ||  this.state.randomCardData.length < 1) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst { featCardData, latestCardData, randomCardData } = this.state;\n\n\t\t\treturn (\n\t\t\t\t// index and firstCardHeader propeties are used to conditionally render the featured and latest headers inside the first BrowseCard component. \n\t\t\t\t// this is because the headers must be rendered inside the first BrowseCard components in order for the headers to have the same behaviour as the grid cards. Oulined by the css grid attributes.\n\t\t\t\t<React.Fragment>\n\n\t\t\t\t\t<div className='index-grid'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfeatCardData.map((cardData, index) => \n\t\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\t\tauthor={cardData.authorName} \n\t\t\t\t\t\t\t\t\trtitle={cardData.title} \n\t\t\t\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tfirstCardHeader='Featured' \n\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='index-grid'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlatestCardData.map((cardData, index) => \n\t\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\t\tauthor={cardData.authorName} \n\t\t\t\t\t\t\t\t\trtitle={cardData.title} \n\t\t\t\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tfirstCardHeader='Most Recent' \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='index-grid'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trandomCardData.map((cardData, index) => \n\t\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\t\tauthor={cardData.authorName} \n\t\t\t\t\t\t\t\t\trtitle={cardData.title} \n\t\t\t\t\t\t\t\t\tindex={index} \n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tfirstCardHeader='Mix It Up' \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<Footer isLoaded={this.state.loadFooter} />\n\n\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t}\n}\n\n\n\n\n\n\nexport default Featured;"]},"metadata":{},"sourceType":"module"}
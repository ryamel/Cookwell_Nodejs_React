{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/cooks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport CookProfile from '../components/cookProfile';\nimport './cooks.sass';\nimport { withRouter } from \"react-router\";\nimport axios from 'axios';\nimport BrowseCard from '../components/browseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cooks = props => {\n  _s();\n\n  const [userData, setUserData] = useState(null);\n  const [recipeData, setRecipeData] = useState([]);\n  useEffect(() => {\n    const data = JSON.stringify({\n      authid: props.location.state.authid\n    });\n    axios.post('/api/users/get-cook-profile', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data);\n      setUserData(res.data);\n    }).catch(err => console.log(err));\n    axios.post('/api/recipes/get-user-recipes-public', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data);\n      setRecipeData(res.data);\n    }).catch(err => console.log(err));\n  }, [userData, recipeData]);\n\n  if (!userData) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cookBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"img-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.PUBLIC_URL + '/user_profile_img/' + userData.profileImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"profile-info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"authName\",\n            children: \"Name Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"authAbout\",\n            children: \"Lorem ipsum about serum norpy surnlimg tupe of\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recipe-container\",\n        children: recipeData.map((cardData, index) => /*#__PURE__*/_jsxDEV(BrowseCard, {\n          img: cardData.img,\n          description: cardData.description,\n          author: cardData.authorName,\n          edit: false,\n          title: cardData.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this);\n  }\n};\n\n_s(Cooks, \"0VmOIEywJwQQjhP0SimtPA6P8rw=\");\n\n_c = Cooks;\nexport default _c2 = withRouter(Cooks);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cooks\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/cooks.jsx"],"names":["React","useEffect","useState","Link","CookProfile","withRouter","axios","BrowseCard","Cooks","props","userData","setUserData","recipeData","setRecipeData","data","JSON","stringify","authid","location","state","post","headers","then","res","console","log","catch","err","process","env","PUBLIC_URL","profileImg","map","cardData","index","img","description","authorName","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport CookProfile from '../components/cookProfile';\nimport './cooks.sass';\nimport { withRouter } from \"react-router\"; \nimport axios from 'axios';\nimport BrowseCard from '../components/browseCard';\n\nconst Cooks = (props) => {\n\tconst [userData, setUserData] = useState(null);\n\tconst [recipeData, setRecipeData] = useState([]);\n\t\n\tuseEffect(() => {\n\t\tconst data = JSON.stringify({authid: props.location.state.authid});\n\n\t\taxios.post('/api/users/get-cook-profile', data, { headers: {'Content-Type': 'application/json'}})\n\t\t.then(res => {\n\t\t\tconsole.log(res.data);\n\t\t\tsetUserData(res.data);\n\t\t})\n\t\t.catch(err => console.log(err));\n\n\t\taxios.post('/api/recipes/get-user-recipes-public', data, { headers: {'Content-Type': 'application/json'}})\n\t\t.then(res => {\n\t\t\tconsole.log(res.data);\n\t\t\tsetRecipeData(res.data);\n\t\t})\n\t\t.catch(err => console.log(err));\n\n\t},[userData, recipeData])\n\n\n\n\tif (!userData) {\n\t\treturn null;\n\t} else {\n\t\treturn (\n\t\t\t<div id=\"cookBody\">\n\t\t\t\t<div id='profile-container'>\n\t\t\t\t\t<div id='img-wrapper'>\n\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + '/user_profile_img/' + userData.profileImg} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='profile-info-container'>\n\t\t\t\t\t\t<div id='authName'>Name Here</div>\n\t\t\t\t\t\t<div id='authAbout'>Lorem ipsum about serum norpy surnlimg tupe of</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id='divider'></div>\n\t\t\t\t<div id='recipe-container'>\n\t\t\t\t\t{\n\t\t\t\t\t\trecipeData.map((cardData, index) => \n\t\t\t\t\t\t\t<BrowseCard \n\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\timg={cardData.img} \n\t\t\t\t\t\t\t\tdescription={cardData.description} \n\t\t\t\t\t\t\t\tauthor={cardData.authorName} \n\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\ttitle={cardData.title}\n\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\n\nexport default withRouter(Cooks);"]},"metadata":{},"sourceType":"module"}
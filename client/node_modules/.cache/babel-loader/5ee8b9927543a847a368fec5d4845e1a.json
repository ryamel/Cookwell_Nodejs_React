{"ast":null,"code":"import React from'react';import{Link}from\"react-router-dom\";import'./photoShow.sass';import photoIcon from'../media/icons/photo45.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var imagesRecipe=require.context('../../public/user_recipes_img/card/',true);var imagesProfile=require.context('../../public/user_profile_img/card/',true);var PhotoShow=/*#__PURE__*/React.forwardRef(function(props,ref){var displayImg=function displayImg(file,fileName,fileObjURL,imageType){try{if(!file&&!fileName&&!fileObjURL)return null;if(!file&&fileName&&!fileObjURL){if(imageType=='recipe')var img=/*#__PURE__*/_jsx(\"img\",{src:imagesRecipe(\"./\".concat(fileName)).default});// case of download from sever --> fileName only\nif(imageType=='user')var img=/*#__PURE__*/_jsx(\"img\",{src:imagesProfile(\"./\".concat(fileName)).default});}if(fileObjURL)var img=/*#__PURE__*/_jsx(\"img\",{src:fileObjURL});// case of upload on client --> file fileName fileObjURL\nreturn/*#__PURE__*/_jsxs(\"div\",{id:\"photo-container\",className:\"clearfix\",children:[\" \",img,\" \"]});}catch(err){console.log(err);return null;}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[displayImg(props.file,props.fileName,props.fileObjURL,props.imageType),/*#__PURE__*/_jsxs(\"label\",{className:\"img-upload-btn\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"fileUploadInput\",ref:ref,onChange:props.onChange,type:\"file\",name:\"file\"}),/*#__PURE__*/_jsx(\"img\",{className:\"phIcon\",src:photoIcon}),/*#__PURE__*/_jsx(\"div\",{className:\"uploadText fileUpload\",children:\"Upload Image ( .png or .jpg file type )\"})]})]});});export default PhotoShow;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/components/photoShow.jsx"],"names":["React","Link","photoIcon","imagesRecipe","require","context","imagesProfile","PhotoShow","forwardRef","props","ref","displayImg","file","fileName","fileObjURL","imageType","img","default","err","console","log","onChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,C,wFACA,GAAMC,CAAAA,YAAY,CAAGC,OAAO,CAACC,OAAR,CAAgB,qCAAhB,CAAuD,IAAvD,CAArB,CACA,GAAMC,CAAAA,aAAa,CAAGF,OAAO,CAACC,OAAR,CAAgB,qCAAhB,CAAuD,IAAvD,CAAtB,CAIA,GAAME,CAAAA,SAAS,cAAGP,KAAK,CAACQ,UAAN,CAAiB,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAEhD,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAOC,QAAP,CAAiBC,UAAjB,CAA6BC,SAA7B,CAA2C,CAC3D,GAAI,CACD,GAAI,CAACH,IAAD,EAAS,CAACC,QAAV,EAAsB,CAACC,UAA3B,CAAuC,MAAO,KAAP,CACvC,GAAI,CAACF,IAAD,EAASC,QAAT,EAAqB,CAACC,UAA1B,CAAsC,CACnC,GAAIC,SAAS,EAAI,QAAjB,CAA2B,GAAIC,CAAAA,GAAG,cAAG,YAAK,GAAG,CAAEb,YAAY,aAAMU,QAAN,EAAZ,CAA8BI,OAAxC,EAAV,CAA+D;AAC1F,GAAIF,SAAS,EAAI,MAAjB,CAAyB,GAAIC,CAAAA,GAAG,cAAG,YAAK,GAAG,CAAEV,aAAa,aAAMO,QAAN,EAAb,CAA+BI,OAAzC,EAAV,CAC3B,CACD,GAAIH,UAAJ,CAAgB,GAAIE,CAAAA,GAAG,cAAG,YAAK,GAAG,CAAEF,UAAV,EAAV,CAAmC;AAEnD,mBAAO,aAAK,EAAE,CAAC,iBAAR,CAA0B,SAAS,CAAC,UAApC,eAAiDE,GAAjD,OAAP,CACF,CACD,MAAME,GAAN,CAAW,CACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,MAAO,KAAP,CACF,CACH,CAfD,CAkBA,mBACG,MAAC,KAAD,CAAO,QAAP,YACMP,UAAU,CAACF,KAAK,CAACG,IAAP,CAAaH,KAAK,CAACI,QAAnB,CAA6BJ,KAAK,CAACK,UAAnC,CAA+CL,KAAK,CAACM,SAArD,CADhB,cAEG,eAAO,SAAS,CAAC,gBAAjB,wBACG,cAAO,SAAS,CAAC,iBAAjB,CAAmC,GAAG,CAAEL,GAAxC,CAA6C,QAAQ,CAAED,KAAK,CAACY,QAA7D,CAAuE,IAAI,CAAC,MAA5E,CAAmF,IAAI,CAAC,MAAxF,EADH,cAEG,YAAK,SAAS,CAAC,QAAf,CAAwB,GAAG,CAAEnB,SAA7B,EAFH,cAGG,YAAK,SAAS,CAAC,uBAAf,qDAHH,GAFH,GADH,CAYF,CAhCiB,CAAlB,CAsCA,cAAeK,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './photoShow.sass';\nimport photoIcon from '../media/icons/photo45.png';\nconst imagesRecipe = require.context('../../public/user_recipes_img/card/', true);\nconst imagesProfile = require.context('../../public/user_profile_img/card/', true);\n  \n\n\nconst PhotoShow = React.forwardRef((props, ref) => {\n\n   const displayImg = (file, fileName, fileObjURL, imageType) => {\n      try {\n         if (!file && !fileName && !fileObjURL) return null;\n         if (!file && fileName && !fileObjURL) {\n            if (imageType == 'recipe') var img = <img src={imagesRecipe(`./${fileName}`).default} />; // case of download from sever --> fileName only\n            if (imageType == 'user') var img = <img src={imagesProfile(`./${fileName}`).default} />;\n         }\n         if (fileObjURL) var img = <img src={fileObjURL} />;// case of upload on client --> file fileName fileObjURL\n\n         return <div id='photo-container' className='clearfix'> {img} </div>;\n      }\n      catch(err) {\n         console.log(err);\n         return null;\n      }\n   }\n\n\n   return (\n      <React.Fragment>\n         {  displayImg(props.file, props.fileName, props.fileObjURL, props.imageType)  }\n         <label className='img-upload-btn'>\n            <input className='fileUploadInput' ref={ref} onChange={props.onChange} type='file' name='file' />\n            <img className='phIcon' src={photoIcon} />\n            <div className='uploadText fileUpload'>\n               Upload Image ( .png or .jpg file type )\n            </div> \n         </label>\n      </React.Fragment>\n   );\n})\n\n\n\n\n\nexport default PhotoShow;\n\n"]},"metadata":{},"sourceType":"module"}
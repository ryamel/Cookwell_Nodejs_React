{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/components/photoShow.jsx\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './photoShow.sass';\nimport photoIcon from '../../media/icons/photo45.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst imagesRecipe = require.context('../../../public/user_recipes_img/card/', true);\n\nconst imagesProfile = require.context('../../../public/user_profile_img/', true);\n\nconst PhotoShow = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const displayImg = (file, fileName, fileObjURL, imageType) => {\n    if (!file && !fileName && !fileObjURL) return null;\n\n    if (!file && fileName && !fileObjURL) {\n      if (imageType == 'recipe') var img = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagesRecipe(`./${fileName}`).default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 47\n      }, this); // case of download from sever --> fileName only\n\n      if (imageType == 'profile') var img = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagesProfile(`./${fileName}`).default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 48\n      }, this);\n    }\n\n    if (fileObjURL) var img = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: fileObjURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }, this); // case of upload on client --> file fileName fileObjURL\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"photo-container\",\n      className: \"clearfix\",\n      children: [\" \", img, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [displayImg(props.file, props.fileName, props.fileObjURL, props.imageType), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"img-upload-btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"fileUploadInput\",\n        ref: ref,\n        onChange: props.onChange,\n        type: \"file\",\n        name: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"phIcon\",\n        src: photoIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadText fileUpload\",\n        children: \"Upload Image ( .png or .jpg file type )\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n});\n_c2 = PhotoShow;\nexport default PhotoShow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PhotoShow$React.forwardRef\");\n$RefreshReg$(_c2, \"PhotoShow\");","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/components/photoShow.jsx"],"names":["React","Link","photoIcon","imagesRecipe","require","context","imagesProfile","PhotoShow","forwardRef","props","ref","displayImg","file","fileName","fileObjURL","imageType","img","default","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,OAAR,CAAgB,wCAAhB,EAA0D,IAA1D,CAArB;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAACC,OAAR,CAAgB,mCAAhB,EAAqD,IAArD,CAAtB;;AAIA,MAAME,SAAS,gBAAGP,KAAK,CAACQ,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAEhD,QAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,UAAjB,EAA6BC,SAA7B,KAA2C;AAC3D,QAAI,CAACH,IAAD,IAAS,CAACC,QAAV,IAAsB,CAACC,UAA3B,EAAuC,OAAO,IAAP;;AAEvC,QAAI,CAACF,IAAD,IAASC,QAAT,IAAqB,CAACC,UAA1B,EAAsC;AACnC,UAAIC,SAAS,IAAI,QAAjB,EAA2B,IAAIC,GAAG,gBAAG;AAAK,QAAA,GAAG,EAAEb,YAAY,CAAE,KAAIU,QAAS,EAAf,CAAZ,CAA8BI;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAV,CADQ,CACuD;;AAC1F,UAAIF,SAAS,IAAI,SAAjB,EAA4B,IAAIC,GAAG,gBAAG;AAAK,QAAA,GAAG,EAAEV,aAAa,CAAE,KAAIO,QAAS,EAAf,CAAb,CAA+BI;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAV;AAC9B;;AAED,QAAIH,UAAJ,EAAgB,IAAIE,GAAG,gBAAG;AAAK,MAAA,GAAG,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA,YAAV,CAR2C,CAQR;;AAEnD,wBAAO;AAAK,MAAA,EAAE,EAAC,iBAAR;AAA0B,MAAA,SAAS,EAAC,UAApC;AAAA,sBAAiDE,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACF,GAXD;;AAcA,sBACG,QAAC,KAAD,CAAO,QAAP;AAAA,eACML,UAAU,CAACF,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACI,QAAnB,EAA6BJ,KAAK,CAACK,UAAnC,EAA+CL,KAAK,CAACM,SAArD,CADhB,eAEG;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA,8BACG;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,GAAG,EAAEL,GAAxC;AAA6C,QAAA,QAAQ,EAAED,KAAK,CAACS,QAA7D;AAAuE,QAAA,IAAI,EAAC,MAA5E;AAAmF,QAAA,IAAI,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,GAAG,EAAEhB;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAYF,CA5BiB,CAAlB;MAAMK,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './photoShow.sass';\nimport photoIcon from '../../media/icons/photo45.png';\nconst imagesRecipe = require.context('../../../public/user_recipes_img/card/', true);\nconst imagesProfile = require.context('../../../public/user_profile_img/', true);\n  \n\n\nconst PhotoShow = React.forwardRef((props, ref) => {\n\n   const displayImg = (file, fileName, fileObjURL, imageType) => {\n      if (!file && !fileName && !fileObjURL) return null;\n\n      if (!file && fileName && !fileObjURL) {\n         if (imageType == 'recipe') var img = <img src={imagesRecipe(`./${fileName}`).default} />; // case of download from sever --> fileName only\n         if (imageType == 'profile') var img = <img src={imagesProfile(`./${fileName}`).default} />;\n      }\n\n      if (fileObjURL) var img = <img src={fileObjURL} />;// case of upload on client --> file fileName fileObjURL\n\n      return <div id='photo-container' className='clearfix'> {img} </div>;\n   }\n\n\n   return (\n      <React.Fragment>\n         {  displayImg(props.file, props.fileName, props.fileObjURL, props.imageType)  }\n         <label className='img-upload-btn'>\n            <input className='fileUploadInput' ref={ref} onChange={props.onChange} type='file' name='file' />\n            <img className='phIcon' src={photoIcon} />\n            <div className='uploadText fileUpload'>\n               Upload Image ( .png or .jpg file type )\n            </div> \n         </label>\n      </React.Fragment>\n   );\n})\n\n\n\n\n\nexport default PhotoShow;\n\n"]},"metadata":{},"sourceType":"module"}
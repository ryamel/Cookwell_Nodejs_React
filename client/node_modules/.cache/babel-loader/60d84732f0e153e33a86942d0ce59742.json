{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/react_express_starter/client/src/pages/featured.jsx\";\nimport React, { Component } from \"react\";\nimport BrowseCard from '../components/browseCard';\nimport './featured.sass'; // import { Link } from 'react-router-dom';\n// featured titles need to be added inside the browseCard on the first of the line\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Featured extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cardData: []\n    };\n  }\n\n  componentDidMount() {\n    // no need to use relative file path for '/api/recipes' with fetch. Fetch will auto find server.js in root dir\n    fetch('/api/recipes/').then(res => res.json()).then(data => this.setState({\n      cardData: data\n    }, () => console.log('got recipies', data))).catch(err => console.log(err)); // var ingr = [\n    // \t{ingrText: 'roma tomatoes', ingrQty: '5'}, \n    // \t{ingrText: 'fresh chopped basil', ingrQty: '1/4 cups'},\n    // \t{ingrText: 'diced red onions', ingrQty: '1/4 cups'},\n    // \t{ingrText: \"minced garlic\", ingrQty: '1 tbsp'},\n    // \t{ingrText: 'balsamic vinegar', ingrQty: '1 tbsp'},\n    // \t{ingrText: 'salt', ingrQty: '1 pinch'},\n    // \t{ingrText: 'ground black pepper', ingrQty: '1 pinch'}\n    // ];\n    // var method = [\n    // \t'Finely dice roma tomatoes. Add to a medium sized mixing bowl, and gently pat down with a paper towel to get rid of the excess liquid.',\n    // \t'Finely dice red onion, and fresh basil. Add to the same mixing bowl.',\n    // \t'Add in garlic, balsamic vinegar, salt (to taste), and pepper (to taste).',\n    // \t'Gently stir together these ingredients.',\n    // \t'Store in the fridge for at least 1 hour before serving. This allows the flavours to integrate.',\n    // \t'For serving: Thinly slice pieces of baguette to ~1 inch thick. Coat with olive oil. Cook in 350℉ for about 5 minutes, or until golden brown. Pile with fresh bruschetta. Serve and enjoy!'\n    // ];\n    // var notes = [\n    // \t{step: 6, noteText: 'Prepare the bruschetta in advance and store in the fridge overnight for easy “make-ahead” preparation that allows the flavours to really mix together.'}\n    // ];\n    // var title = \"Bruschetta\";\n    // var authid = 2;\n    // var description = \"An Italian appetizer full of fresh ingredients and even fresher flavours that will have you day dreaming of the summer. Best served on a grilled crusty baguette with a drizzle of olive oil.\";\n    // var mealType = 'Snacks & Appetizers';\n    // var diet = ['Dairy Free', 'Gluten Free', 'Nut Free', 'Ketogenic', 'Vegan'];\n    // var cusine = ['None'];\n    // var servings = '20';\n    // var img = \"Bruschetta_600e29fa44869.jpg\";\n    // var cookTime = 20;\n    //post req\n    // fetch('/api/postrecipe/', {\n    // \tmethod: 'POST',\n    // \theaders: {\n    // \t\t'Accept': 'application/json',\n    // \t\t'Content-Type': 'application/json'\n    // \t},\n    // \tbody: JSON.stringify({\n    // \t\ttitle:  title,\n    //         authid:  authid,\n    //         description:  description,\n    //         mealType: mealType,\n    //         diet: diet,\n    //         cusine: cusine,\n    //         servings: servings,\n    //         img:  img,\n    //         cookTime: cookTime,\n    //         ingredients: ingr,\n    //         method: method,\n    //         notes: notes\n    // \t})\n    // })\n    // .then(res => res.json())\n    // .then(data => console.log(data))\n    // .catch(err => console.log(err));\n    // //post req users\n    // fetch('/api/postusers/', {\n    // \tmethod: 'POST',\n    // \theaders: {\n    // \t\t'Accept': 'application/json',\n    // \t\t'Content-Type': 'application/json'\n    // \t},\n    // \tbody: JSON.stringify({\n    //         displayName:  'displayName',\n    //         pwd: 'password123',\n    //         email: 'ryamel70@gmail.com',\n    //         about: 'about me description test case min 40 character, about me lormipsum blah yadda heloo the lazy fox jumped over'\n    // \t})\n    // })\n    // .then(res => res.json())\n    // .then(data => console.log(data))\n    // .catch(err => console.log(err));\n  }\n\n  render() {\n    // console.log(this.state);\n    // this.state.cardData.map(card => {\n    // \tconst cardD = [\n    // \t\t{id: card.id},\n    // \t\t{title: card.title},\n    // \t\t{description: card.description},\n    // \t\t{imgSrc: card.imgSrc},\n    // \t\t{author: card.author},\n    // \t\t{link: card.link}\n    // \t];\n    // });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mediaTitle\",\n        children: \"Featured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature-titles\",\n        children: \"Featured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index-grid\",\n        children: [\" \", this.state.cardData.map(cardData => /*#__PURE__*/_jsxDEV(BrowseCard, {\n          img: cardData.img,\n          description: cardData.description,\n          author: cardData.author,\n          title: cardData.title\n        }, cardData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mediaTitle\",\n        children: \"Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature-titles\",\n        children: \"Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index-grid\",\n        children: /*#__PURE__*/_jsxDEV(BrowseCard, {\n          imgSrc: \"test\",\n          description: \"dsf\",\n          author: \"tst\",\n          title: \"dsfdfs\",\n          link: \"./\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Featured;","map":{"version":3,"sources":["/Users/ryan/Documents/react_express_starter/client/src/pages/featured.jsx"],"names":["React","Component","BrowseCard","Featured","constructor","state","cardData","componentDidMount","fetch","then","res","json","data","setState","console","log","catch","err","render","map","img","description","author","title","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,iBAAP,C,CACA;AAIA;;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAChCG,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE;AADE,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB;AACAC,IAAAA,KAAK,CAAC,eAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAEM;AAAX,KAAd,EAAgC,MAAME,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,IAA5B,CAAtC,CAFf,EAGEI,KAHF,CAGQC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAHf,EAFmB,CAWnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAIDC,EAAAA,MAAM,GAAG;AAKR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,wBACC;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAIC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,wBACE,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAwBb,QAAQ,iBAChC,QAAC,UAAD;AAA+B,UAAA,GAAG,EAAEA,QAAQ,CAACc,GAA7C;AAAkD,UAAA,WAAW,EAAEd,QAAQ,CAACe,WAAxE;AAAqF,UAAA,MAAM,EAAEf,QAAQ,CAACgB,MAAtG;AAA8G,UAAA,KAAK,EAAEhB,QAAQ,CAACiB;AAA9H,WAAiBjB,QAAQ,CAACkB,GAA1B;AAAA;AAAA;AAAA;AAAA,gBADA,CADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,eAWC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD,eAYC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZD,eAcC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACC,QAAC,UAAD;AAAY,UAAA,MAAM,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,KAAtC;AAA4C,UAAA,MAAM,EAAC,KAAnD;AAAyD,UAAA,KAAK,EAAC,QAA/D;AAAwE,UAAA,IAAI,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAqBA;;AA5J+B;;AAkKjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport BrowseCard from '../components/browseCard';\nimport './featured.sass';\n// import { Link } from 'react-router-dom';\n\n\n\n// featured titles need to be added inside the browseCard on the first of the line\n\nclass Featured extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcardData: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// no need to use relative file path for '/api/recipes' with fetch. Fetch will auto find server.js in root dir\n\t\tfetch('/api/recipes/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => this.setState({cardData: data}, () => console.log('got recipies', data)))\n\t\t\t.catch(err => console.log(err));\n\n\n\n\n\n\t\t// var ingr = [\n\t\t// \t{ingrText: 'roma tomatoes', ingrQty: '5'}, \n\t\t// \t{ingrText: 'fresh chopped basil', ingrQty: '1/4 cups'},\n\t\t// \t{ingrText: 'diced red onions', ingrQty: '1/4 cups'},\n\t\t// \t{ingrText: \"minced garlic\", ingrQty: '1 tbsp'},\n\t\t// \t{ingrText: 'balsamic vinegar', ingrQty: '1 tbsp'},\n\t\t// \t{ingrText: 'salt', ingrQty: '1 pinch'},\n\t\t// \t{ingrText: 'ground black pepper', ingrQty: '1 pinch'}\n\t\t// ];\n\n\t\t// var method = [\n\t\t// \t'Finely dice roma tomatoes. Add to a medium sized mixing bowl, and gently pat down with a paper towel to get rid of the excess liquid.',\n\t\t// \t'Finely dice red onion, and fresh basil. Add to the same mixing bowl.',\n\t\t// \t'Add in garlic, balsamic vinegar, salt (to taste), and pepper (to taste).',\n\t\t// \t'Gently stir together these ingredients.',\n\t\t// \t'Store in the fridge for at least 1 hour before serving. This allows the flavours to integrate.',\n\t\t// \t'For serving: Thinly slice pieces of baguette to ~1 inch thick. Coat with olive oil. Cook in 350℉ for about 5 minutes, or until golden brown. Pile with fresh bruschetta. Serve and enjoy!'\n\t\t// ];\n\n\t\t// var notes = [\n\t\t// \t{step: 6, noteText: 'Prepare the bruschetta in advance and store in the fridge overnight for easy “make-ahead” preparation that allows the flavours to really mix together.'}\n\t\t// ];\n\n\t\t// var title = \"Bruschetta\";\n\n\t\t// var authid = 2;\n\n\t\t// var description = \"An Italian appetizer full of fresh ingredients and even fresher flavours that will have you day dreaming of the summer. Best served on a grilled crusty baguette with a drizzle of olive oil.\";\n\n\t\t// var mealType = 'Snacks & Appetizers';\n\n\t\t// var diet = ['Dairy Free', 'Gluten Free', 'Nut Free', 'Ketogenic', 'Vegan'];\n\n\t\t// var cusine = ['None'];\n\n\t\t// var servings = '20';\n\n\t\t// var img = \"Bruschetta_600e29fa44869.jpg\";\n\n\t\t// var cookTime = 20;\n\n\n\n\t\t//post req\n\t\t// fetch('/api/postrecipe/', {\n\t\t// \tmethod: 'POST',\n\t\t// \theaders: {\n\t\t// \t\t'Accept': 'application/json',\n\t\t// \t\t'Content-Type': 'application/json'\n\t\t// \t},\n\t\t// \tbody: JSON.stringify({\n\t\t// \t\ttitle:  title,\n\t\t//         authid:  authid,\n\t\t//         description:  description,\n\t\t//         mealType: mealType,\n\t\t//         diet: diet,\n\t\t//         cusine: cusine,\n\t\t//         servings: servings,\n\t\t//         img:  img,\n\t\t//         cookTime: cookTime,\n\t\t//         ingredients: ingr,\n\t\t//         method: method,\n\t\t//         notes: notes\n\t\t// \t})\n\t\t// })\n\t\t// .then(res => res.json())\n\t\t// .then(data => console.log(data))\n\t\t// .catch(err => console.log(err));\n\n\n\n\n\t\t// //post req users\n\t\t// fetch('/api/postusers/', {\n\t\t// \tmethod: 'POST',\n\t\t// \theaders: {\n\t\t// \t\t'Accept': 'application/json',\n\t\t// \t\t'Content-Type': 'application/json'\n\t\t// \t},\n\t\t// \tbody: JSON.stringify({\n\t\t//         displayName:  'displayName',\n\t\t//         pwd: 'password123',\n\t\t//         email: 'ryamel70@gmail.com',\n\t\t//         about: 'about me description test case min 40 character, about me lormipsum blah yadda heloo the lazy fox jumped over'\n\t\t// \t})\n\t\t// })\n\t\t// .then(res => res.json())\n\t\t// .then(data => console.log(data))\n\t\t// .catch(err => console.log(err));\n\n\n\n\t}\n\n\n\n\trender() {\n\n\t\t\n\n\n\t\t// console.log(this.state);\n\n\t\t// this.state.cardData.map(card => {\n\t\t// \tconst cardD = [\n\t\t// \t\t{id: card.id},\n\t\t// \t\t{title: card.title},\n\t\t// \t\t{description: card.description},\n\t\t// \t\t{imgSrc: card.imgSrc},\n\t\t// \t\t{author: card.author},\n\t\t// \t\t{link: card.link}\n\t\t// \t];\n\t\t// });\n\n\t\t\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='mediaTitle'>Featured</div>\n\t\t\t\t<div className='feature-titles'>Featured</div>\n\n\t\t\t\t<div className='index-grid'> {/*does cardData.id show in html? (security risk)*/}\n\t\t\t\t\t{this.state.cardData.map(cardData =>\n\t\t\t\t\t\t<BrowseCard key={cardData._id} img={cardData.img} description={cardData.description} author={cardData.author} title={cardData.title} />\n\t\t\t\t\t)}\n\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div className='mediaTitle'>Latest</div>\n\t\t\t\t<div className='feature-titles'>Latest</div>\n\n\t\t\t\t<div className='index-grid'>\n\t\t\t\t\t<BrowseCard imgSrc='test' description='dsf' author='tst' title='dsfdfs' link='./' />\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n\nexport default Featured;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/recipe-page.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './recipe-page.sass'; //import { useParams } from 'react-router-dom';\n//import queryString from 'query-string';\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Recipepage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoaded: false,\n      result: null\n    };\n    this.displayDietBanner = this.displayDietBanner.bind(this);\n    this.getParameterByName = this.getParameterByName.bind(this);\n  } // const [state, setState] = useState({});\n  // const [error, setError] = useState(null);\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // let { id } = useParams();\n\n\n  componentDidMount() {\n    // fetch('/api/recipes/getby/' + id)\n    // \t.then(res => res.json())\n    // \t.then(\n    // \t\t(result) => {\n    // \t\t\tsetState({result});\n    // \t\t\tsetIsLoaded(true);\n    // \t\t\tconsole.log(result);\n    // \t\t}, // setState is an sync function!\n    // \t\t(error) => {\n    // \t\t\tsetError(error);\n    // \t\t\tsetIsLoaded(true);\n    // \t\t} // handle errors without the try catch block. Avoids react bugs in components\n    // \t);\n    let rtitle = this.getParameterByName('rtitle');\n    axios.get('/api/recipes/getbytitle/' + rtitle).then(res => {\n      console.log(res.data);\n      this.setState({\n        result: res.data,\n        isLoaded: true\n      });\n    }).catch(error => {\n      console.log(error); //this.setState({errMsg: error.response.data});\n    });\n  }\n\n  getParameterByName(name, url = window.location.href) {\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  displayDietBanner(diet) {\n    if (diet.length < 1) {\n      return null;\n    }\n\n    if (diet.includes('Vegan') && diet.includes('Vegetarian')) {\n      const ind = diet.indexOf('Vegetarian');\n      diet.splice(ind, 1);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"legend-container\",\n      children: diet.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"symContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/diet/' + name.replace(' ', '') + '.svg'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dietName\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 8\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this);\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-page-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"recipe-content-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"rec-container-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"recipe-img-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: process.env.PUBLIC_URL + '/user_recipes_img/' + this.state.result.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"rec-container-1-title\",\n              children: this.state.result.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"about-container\",\n              children: this.state.result.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-name\",\n              id: \"recipePage-sym-container\",\n              children: \"display det symb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"stat-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"float-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"stat-name-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-name\",\n                    children: \"Time \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-name\",\n                    children: \"Serves \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"stat-number-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-name\",\n                    children: this.state.result.cookTime + ' min'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-name\",\n                    children: this.state.result.servings\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"rec-container-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rec-container-headings\",\n              children: \"INGREDIENTS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: this.state.result.ingredients.map((ingr, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", fracToHtmlEntity(ingr.qty) + ' ' + ingr.text, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"rec-container-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rec-container-headings\",\n              children: \"METHOD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: this.state.result.method.map((method, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", method, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"rec-container-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rec-container-headings\",\n              id: \"note-title\",\n              children: \"NOTES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-container\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: this.state.result.notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"note\",\n                    children: [\" \", note.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 12\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"right-banner\",\n          children: this.displayDietBanner(this.state.result.diet)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nfunction fracToHtmlEntity(string) {\n  // identify fraction in string\n  const index = string.indexOf('/'); // indexOf retuns -1 if character not found\n\n  const num1 = parseInt(string[index - 1]); // parseInt returns NaN if input is not string\n\n  const num2 = parseInt(string[index + 1]); // error check\n\n  if (num1 === NaN || num2 === NaN || index === -1) {\n    return string;\n  } // seperate string components\n\n\n  const firstHalf = string.substring(0, index - 1).replace(' ', '');\n  const secondHalf = string.substring(index + 2); // determine unicode value\n\n  if (num1 === 1 && num2 === 4) {\n    var unicode = 188;\n  } else if (num1 === 1 && num2 === 2) {\n    var unicode = 189;\n  } else if (num1 === 3 && num2 === 4) {\n    var unicode = 190;\n  } else if (num1 === 1 && num2 === 7) {\n    var unicode = 8528;\n  } else if (num1 === 1 && num2 === 9) {\n    var unicode = 8529;\n  } else if (num1 === 1 && num2 === 10) {\n    var unicode = 8530;\n  } else if (num1 === 1 && num2 === 3) {\n    var unicode = 8531;\n  } else if (num1 === 2 && num2 === 3) {\n    var unicode = 8532;\n  } else if (num1 === 1 && num2 === 5) {\n    var unicode = 8533;\n  } else if (num1 === 2 && num2 === 5) {\n    var unicode = 8534;\n  } else if (num1 === 3 && num2 === 5) {\n    var unicode = 8535;\n  } else if (num1 === 4 && num2 === 5) {\n    var unicode = 8536;\n  } else if (num1 === 1 && num2 === 6) {\n    var unicode = 8537;\n  } else if (num1 === 5 && num2 === 6) {\n    var unicode = 8538;\n  } else if (num1 === 1 && num2 === 8) {\n    var unicode = 8539;\n  } else if (num1 === 3 && num2 === 8) {\n    var unicode = 8540;\n  } else if (num1 === 5 && num2 === 8) {\n    var unicode = 8541;\n  } else if (num1 === 7 && num2 === 8) {\n    var unicode = 8542;\n  } else {\n    return string;\n  }\n\n  return firstHalf + String.fromCharCode(unicode) + secondHalf;\n}\n\nexport default Recipepage;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/recipe-page.jsx"],"names":["React","Component","Link","axios","Recipepage","constructor","state","isLoaded","result","displayDietBanner","bind","getParameterByName","componentDidMount","rtitle","get","then","res","console","log","data","setState","catch","error","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","diet","length","includes","ind","indexOf","splice","map","index","process","env","PUBLIC_URL","render","img","title","description","cookTime","servings","ingredients","ingr","fracToHtmlEntity","qty","text","method","notes","note","string","num1","parseInt","num2","NaN","firstHalf","substring","secondHalf","unicode","String","fromCharCode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './recipe-page.sass';\n//import { useParams } from 'react-router-dom';\n//import queryString from 'query-string';\nimport axios from 'axios';\n\n\n\nclass Recipepage extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisLoaded: false,\n\t\t\tresult: null\n\t\t}\t\n\n\t\tthis.displayDietBanner = this.displayDietBanner.bind(this);\n\t\tthis.getParameterByName = this.getParameterByName.bind(this);\n\t}\n\t// const [state, setState] = useState({});\n\t// const [error, setError] = useState(null);\n\t// const [isLoaded, setIsLoaded] = useState(false);\n\n\t// let { id } = useParams();\n\n\n\tcomponentDidMount() {\n\n\t\t// fetch('/api/recipes/getby/' + id)\n\t\t// \t.then(res => res.json())\n\t\t// \t.then(\n\t\t// \t\t(result) => {\n\t\t// \t\t\tsetState({result});\n\t\t// \t\t\tsetIsLoaded(true);\n\t\t// \t\t\tconsole.log(result);\n\t\t// \t\t}, // setState is an sync function!\n\t\t// \t\t(error) => {\n\t\t// \t\t\tsetError(error);\n\t\t// \t\t\tsetIsLoaded(true);\n\t\t// \t\t} // handle errors without the try catch block. Avoids react bugs in components\n\t\t// \t);\n\n\t\tlet rtitle = this.getParameterByName('rtitle');\n\n\t\taxios.get('/api/recipes/getbytitle/' + rtitle)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tresult: res.data,\n\t\t\t\t\tisLoaded: true\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t\t//this.setState({errMsg: error.response.data});\n\t\t\t})\n\n\t}\n\n\tgetParameterByName(name, url = window.location.href) {\n\t    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n\t    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n\t        results = regex.exec(url);\n\t    if (!results) return null;\n\t    if (!results[2]) return '';\n\t    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n\t}\n\n\tdisplayDietBanner(diet) {\n\t\tif (diet.length < 1) {\n\t\t\treturn null;\n\t\t}\n\t\tif (diet.includes('Vegan') && diet.includes('Vegetarian')) {\n\t\t\tconst ind = diet.indexOf('Vegetarian');\n\t\t\tdiet.splice(ind, 1);\n\t\t}\n\t\treturn (\n\t\t\t<div id='legend-container'>\n\t\t\t\t{ \n\t\t\t\t\tdiet.map((name, index) => (\n\t\t\t\t\t\t<div key={index} className='symContainer'>\n\t\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + '/diet/' + name.replace(' ','') + '.svg'} /> \n\t\t\t\t\t\t\t<span className='dietName'>{name}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n\n\trender() {\n\t\tif (!this.state.isLoaded)  {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn(\n\t\t\t\t<div className=\"recipe-page-container\">\n\t\t\t\t\t<div id=\"recipe-content-banner\">\n\n\t\t\t\t\t\t<div id=\"rec-container-1\">\n\n\t\t\t\t\t\t\t<div id='recipe-img-container'>\n\t\t\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + '/user_recipes_img/' + this.state.result.img} />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div id=\"rec-container-1-title\">{this.state.result.title}</div>\n\t\t\t\t\t\t\t<div id='about-container'>{this.state.result.description}</div>\n\t\t\t\t\t\t\t<div className='stat-name' id=\"recipePage-sym-container\">display det symb</div>\n\n\t\t\t\t\t\t\t<div id='stat-container'>\n\t\t\t\t\t\t\t\t<div id=\"float-container\">\n\n\t\t\t\t\t\t\t\t\t<div id='stat-name-container'>\n\t\t\t\t\t\t\t\t\t\t<div className='stat-name'>Time </div>\n\t\t\t\t\t\t\t\t\t\t<div className='stat-name'>Serves </div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div id=\"stat-number-container\">\n\t\t\t\t\t\t\t\t\t\t<div className='stat-name'>{this.state.result.cookTime + ' min'}</div>\n\t\t\t\t\t\t\t\t\t\t<div className='stat-name'>{this.state.result.servings}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id=\"rec-container-2\">\n\t\t\t\t\t\t\t<div className='rec-container-headings'>\n\t\t\t\t\t\t\t\tINGREDIENTS \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{this.state.result.ingredients.map((ingr, index) => (\n\t\t\t\t\t\t\t\t\t<li key={index}> {fracToHtmlEntity(ingr.qty) + ' ' + ingr.text} </li>\n\t\t\t\t\t\t\t\t))}\t\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id=\"rec-container-3\">\n\t\t\t\t\t\t\t<div className='rec-container-headings'>\n\t\t\t\t\t\t\t\tMETHOD\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t{this.state.result.method.map((method, index) => (\n\t\t\t\t\t\t\t\t\t<li key={index}> {method} </li>\n\t\t\t\t\t\t\t\t))}\t\n\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id='rec-container-4'>\n\t\t\t\t\t\t\t<div className='rec-container-headings' id='note-title'>\n\t\t\t\t\t\t\t\tNOTES\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='note-container'>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t{this.state.result.notes.map((note, index) => (\n\t\t\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<span className='note'> {note.text}</span>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t))}\t\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"right-banner\">\n\t\t\t\t\t\t{ this.displayDietBanner(this.state.result.diet) }\n\n\t{/*\t\t\t\t\t<div id=\"share-this-container\">\n\n\t\t\t\t\t\t\t<div id=\"title\">Share this recipe</div>\n\n\t\t\t\t\t\t\t<div id=\"ad-flexbox-container\">\n\t\t\t\t\t\t\t\t<div><a href=\"#\" className=\"fa fa-facebook\"></a></div>\n\t\t\t\t\t\t\t\t<div><a href=\"#\" className=\"fa fa-twitter\"></a></div>\n\t\t\t\t\t\t\t\t<div><a href=\"#\" className=\"fa fa-pinterest\"></a></div>\n\t\t\t\t\t\t\t\t<div><a href=\"#\" className=\"fa fa-envelope\"></a></div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>*/}\n\t\t\t\t\t</div>\n\n\t{/*\t\t\t\t<div id='rec-container-5'>\n\n\t\t\t\t\t\t<div className='rec-container-headings-5'>\n\t\t\t\t\t\t\tRECOMENDED\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className='more-banner-card more-recomended'>\n\t\t\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t\t\t<img src='Media/user_recipe_images/' />\n\t\t\t\t\t\t\t\t\t<div className='overlay'>\n\t\t\t\t\t\t\t\t\t\t<div className='overlay-title'></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> */}\n\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\n\n\n\n\n\n\n\nfunction fracToHtmlEntity(string) {\n\n\t// identify fraction in string\n\tconst index = string.indexOf('/'); // indexOf retuns -1 if character not found\n\tconst num1 = parseInt(string[index-1]); // parseInt returns NaN if input is not string\n\tconst num2 = parseInt(string[index+1]);\n\n\t// error check\n\tif (num1 === NaN || num2 === NaN || index === -1) {\n\t\treturn string;\n\t}\n\n\t// seperate string components\n\tconst firstHalf = string.substring(0, index-1).replace(' ', '');\n\tconst secondHalf = string.substring(index+2);\n\n\t// determine unicode value\n\tif (num1 === 1 && num2 === 4) {\n\t\tvar unicode = 188;\n\t} else if (num1 === 1 && num2 === 2) {\n\t\tvar unicode = 189;\n\t} else if (num1 === 3 && num2 === 4) {\n\t\tvar unicode = 190;\n\t} else if (num1 === 1 && num2 === 7) {\n\t\tvar unicode = 8528;\n\t} else if (num1 === 1 && num2 === 9) {\n\t\tvar unicode = 8529;\n\t} else if (num1 === 1 && num2 === 10) {\n\t\tvar unicode = 8530;\n\t} else if (num1 === 1 && num2 === 3) {\n\t\tvar unicode = 8531;\n\t} else if (num1 === 2 && num2 === 3) {\n\t\tvar unicode = 8532;\n\t} else if (num1 === 1 && num2 === 5) {\n\t\tvar unicode = 8533;\n\t} else if (num1 === 2 && num2 === 5) {\n\t\tvar unicode = 8534;\n\t} else if (num1 === 3 && num2 === 5) {\n\t\tvar unicode = 8535;\n\t} else if (num1 === 4 && num2 === 5) {\n\t\tvar unicode = 8536;\n\t} else if (num1 === 1 && num2 === 6) {\n\t\tvar unicode = 8537;\n\t} else if (num1 === 5 && num2 === 6) {\n\t\tvar unicode = 8538;\n\t} else if (num1 === 1 && num2 === 8) {\n\t\tvar unicode = 8539;\n\t} else if (num1 === 3 && num2 === 8) {\n\t\tvar unicode = 8540;\n\t} else if (num1 === 5 && num2 === 8) {\n\t\tvar unicode = 8541;\n\t} else if (num1 === 7 && num2 === 8) {\n\t\tvar unicode = 8542; \n\t} else {\n\t\treturn string;\n\t}\n\n\treturn firstHalf + String.fromCharCode(unicode) + secondHalf;\n}\n\n\n\n\nexport default Recipepage;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/search-page.jsx\";\nimport React, { Component } from \"react\";\nimport './search-page.sass';\nimport DropMenu from '../components/dropMenu';\nimport MultiSelectMenu from '../components/multiSelectMenu';\nimport { mealTypes, dietOptions, cuisine } from '../searchOptions';\nimport ShowResults from './show-results';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Searchpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      results: [],\n      isLoaded: false,\n      error: false,\n      searchText: '',\n      diet: [],\n      cuisine: [],\n      mealType: [],\n      time: null\n    }; // this.searchFunction = this.searchFunction.bind(this);\n\n    this.handleInput = this.handleInput.bind(this); //this.getParameterByName = this.getParameterByName.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('props');\n    console.log(this.props); // inital keyword search\n    //let keywords = this.getParameterByName('keywords');\n    //let data = JSON.stringify({search: keywords});\n    // axios.post('/api/recipes/search-component-mount', data, { headers: { 'Content-Type': 'application/json' } })\n    // \t.then(res => {\n    // \t\tthis.setState({\n    // \t\t\tresults: res.data,\n    // \t\t\tisLoaded: true\n    // \t\t})\n    // \t})\n    // \t.catch(err => {\n    // \t\tconsole.log(err.response.data);\n    // \t});\n    // // set search feild\n    // this.setState({searchText: keywords});\n  } // searchFunction(input) {\n  // \tlet data = JSON.stringify({\n  // \t\tdiet: this.state.diet,\n  //        \tcuisine: this.state.cuisine,\n  //        \tmealType: this.state.mealType,\n  //        \ttime: this.state.time,\n  //        \tsearchText: this.props.search\n  // \t});\n  // \t// const postOptions = {\n  //  //        method: 'POST',\n  //  //        headers: { 'Content-Type': 'application/json' },\n  //  //        body: JSON.stringify(data)\n  //  //    };\n  // \t// fetch(\"/api/recipes/search/0\", postOptions)\n  // \t// \t.then(res => res.json())\n  // \t// \t.then(\n  // \t// \t\t(data) => {\n  // \t// \t\t\tconsole.log(data);\n  // \t// \t\t\tthis.setState({\n  // \t// \t\t\t\tresults: data,\n  // \t// \t\t\t\tisLoaded: true,\n  // \t// \t\t\t\terror: false\n  // \t// \t\t\t})\n  // \t// \t\t},\n  // \t// \t\t(error) => {\n  // \t// \t\t\tconsole.log('error');\n  // \t// \t\t\tthis.setState({\n  // \t// \t\t\t\tisLoaded: false,\n  // \t// \t\t\t\terror: error\n  // \t// \t\t\t})\n  // \t// \t\t}\n  // \t// \t)\n  // \taxios.post(\"/api/recipes/search\", data, { headers: { 'Content-Type': 'application/json' } })\n  // \t\t.then(res => {\n  // \t\t\tconsole.log(res);\n  // \t\t\tthis.setState({\n  // \t\t\t\tresults: data,\n  // \t\t\t\tisLoaded: true,\n  // \t\t\t\terror: false\n  // \t\t\t})\n  // \t\t})\n  // \t\t.catch(err => console.log(err));\n  // }\n  // getParameterByName(name, url = window.location.href) {\n  //     name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  //     var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n  //         results = regex.exec(url);\n  //     if (!results) return null;\n  //     if (!results[2]) return '';\n  //     return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  // }\n\n\n  handleInput(stateName, value) {\n    // if time selection\n    if (stateName == 'time') {\n      if (this.state.time === value) {\n        this.setState({\n          [stateName]: null\n        }, console.log(this.state.time));\n      } else {\n        this.setState({\n          [stateName]: value\n        }, console.log(this.state.time));\n      }\n\n      return;\n    } // if diet, mealType, or cuisine selection. Check if selection exists in state.diet array. If aleady exists, remove it. If it doesnt, append it to the state.diet\n\n\n    if (stateName == 'diet') {\n      var newState = this.state.diet;\n      var cont = 1;\n    } else if (stateName == 'cuisine') {\n      var newState = this.state.cuisine;\n      var cont = 1;\n    } else if (stateName == 'mealType') {\n      var newState = this.state.mealType;\n      var cont = 1;\n    }\n\n    if (cont) {\n      if (newState.includes(value)) {\n        const index = newState.indexOf(value);\n        newState.splice(index, 1);\n      } else {\n        newState.push(value);\n      }\n\n      this.setState({\n        [stateName]: newState\n      }, console.log(this.state));\n    } // if searchText\n\n\n    if (stateName == 'searchText') {\n      this.setState({\n        [stateName]: value\n      }, console.log(this.state.searchText));\n    }\n  }\n\n  render() {\n    console.log(this.props.search);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"restrictions-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterDivs\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"restriction-label\",\n              children: \"Dietary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(MultiSelectMenu, {\n              name: \"diet\",\n              options: dietOptions,\n              state: this.state.diet,\n              handleInput: e => this.handleInput(e.target.name, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterDivs\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"restriction-label\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"check-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lt-sym\",\n                children: \"<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 10\n              }, this), \" 30 min\", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"time\",\n                value: \"30\",\n                type: \"checkbox\",\n                checked: this.state.time === \"30\",\n                onChange: e => this.handleInput(e.target.name, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"check-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lt-sym\",\n                children: \"<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 10\n              }, this), \" 45 min\", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"time\",\n                value: \"45\",\n                type: \"checkbox\",\n                checked: this.state.time === \"45\",\n                onChange: e => this.handleInput(e.target.name, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"check-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lt-sym\",\n                children: \"<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 10\n              }, this), \" 60 min\", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"time\",\n                value: \"60\",\n                type: \"checkbox\",\n                checked: this.state.time === \"60\",\n                onChange: e => this.handleInput(e.target.name, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterDivs\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"restriction-label dropMenu-label\",\n              children: \"Culinary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(DropMenu, {\n              name: \"cuisine\",\n              options: cuisine,\n              handleInput: e => this.handleInput(e.target.name, e.target.value),\n              state: this.state.cuisine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterDivs\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"restriction-label dropMenu-label\",\n              children: \"Meal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(DropMenu, {\n              name: \"mealType\",\n              options: mealTypes,\n              handleInput: e => this.handleInput(e.target.name, e.target.value),\n              state: this.state.mealType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ShowResults, {\n        isLoaded: this.state.isLoaded,\n        error: this.state.error,\n        results: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Searchpage;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/search-page.jsx"],"names":["React","Component","DropMenu","MultiSelectMenu","mealTypes","dietOptions","cuisine","ShowResults","axios","Searchpage","constructor","props","state","show","results","isLoaded","error","searchText","diet","mealType","time","handleInput","bind","componentDidMount","console","log","stateName","value","setState","newState","cont","includes","index","indexOf","splice","push","render","search","e","target","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './search-page.sass';\nimport DropMenu from '../components/dropMenu';\nimport MultiSelectMenu from '../components/multiSelectMenu';\nimport { mealTypes, dietOptions, cuisine } from '../searchOptions';\nimport ShowResults from './show-results'\nimport axios from 'axios';\n\nclass Searchpage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshow: false,\n\t\t\tresults: [],\n\t\t\tisLoaded: false,\n\t\t\terror: false,\n\t\t\tsearchText: '',\n\t\t\tdiet: [],\n\t\t\tcuisine: [],\n\t\t\tmealType: [],\n\t\t\ttime: null\n\t\t}\n\t\t// this.searchFunction = this.searchFunction.bind(this);\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\t//this.getParameterByName = this.getParameterByName.bind(this);\n\t}\n\n\n\tcomponentDidMount() {\n\n\t\tconsole.log('props');\n\t\tconsole.log(this.props);\n\t\t// inital keyword search\n\t\t//let keywords = this.getParameterByName('keywords');\n\t\t//let data = JSON.stringify({search: keywords});\n\n\t\t// axios.post('/api/recipes/search-component-mount', data, { headers: { 'Content-Type': 'application/json' } })\n\t\t// \t.then(res => {\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tresults: res.data,\n\t\t// \t\t\tisLoaded: true\n\t\t// \t\t})\n\t\t// \t})\n\t\t// \t.catch(err => {\n\t\t// \t\tconsole.log(err.response.data);\n\t\t// \t});\n\n\t\t// // set search feild\n\t\t// this.setState({searchText: keywords});\n\t}\n\n\t// searchFunction(input) {\n\n\t// \tlet data = JSON.stringify({\n\t// \t\tdiet: this.state.diet,\n\t//        \tcuisine: this.state.cuisine,\n\t//        \tmealType: this.state.mealType,\n\t//        \ttime: this.state.time,\n\t//        \tsearchText: this.props.search\n\t// \t});\n\n\t// \t// const postOptions = {\n\t//  //        method: 'POST',\n\t//  //        headers: { 'Content-Type': 'application/json' },\n\t//  //        body: JSON.stringify(data)\n\t//  //    };\n\n\t    \t   \n\t// \t// fetch(\"/api/recipes/search/0\", postOptions)\n\t// \t// \t.then(res => res.json())\n\t// \t// \t.then(\n\t// \t// \t\t(data) => {\n\t// \t// \t\t\tconsole.log(data);\n\t// \t// \t\t\tthis.setState({\n\t// \t// \t\t\t\tresults: data,\n\t// \t// \t\t\t\tisLoaded: true,\n\t// \t// \t\t\t\terror: false\n\t// \t// \t\t\t})\n\t// \t// \t\t},\n\t// \t// \t\t(error) => {\n\t// \t// \t\t\tconsole.log('error');\n\t// \t// \t\t\tthis.setState({\n\t// \t// \t\t\t\tisLoaded: false,\n\t// \t// \t\t\t\terror: error\n\t// \t// \t\t\t})\n\t// \t// \t\t}\n\t// \t// \t)\n\n\t// \taxios.post(\"/api/recipes/search\", data, { headers: { 'Content-Type': 'application/json' } })\n\t// \t\t.then(res => {\n\t// \t\t\tconsole.log(res);\n\t// \t\t\tthis.setState({\n\t// \t\t\t\tresults: data,\n\t// \t\t\t\tisLoaded: true,\n\t// \t\t\t\terror: false\n\t// \t\t\t})\n\t// \t\t})\n\t// \t\t.catch(err => console.log(err));\n\t// }\n\n\n\t// getParameterByName(name, url = window.location.href) {\n\t//     name = name.replace(/[\\[\\]]/g, '\\\\$&');\n\t//     var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n\t//         results = regex.exec(url);\n\t//     if (!results) return null;\n\t//     if (!results[2]) return '';\n\t//     return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n\t// }\n\n\n\thandleInput(stateName, value) {\n\n\t\t// if time selection\n\t\tif (stateName == 'time') {\n\t\t\tif (this.state.time === value) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t[stateName]: null\n\t\t\t\t},console.log(this.state.time));\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\t[stateName]: value\n\t\t\t\t},console.log(this.state.time));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\n\t\t// if diet, mealType, or cuisine selection. Check if selection exists in state.diet array. If aleady exists, remove it. If it doesnt, append it to the state.diet\n\t\tif (stateName == 'diet') {\n\t\t\tvar newState = this.state.diet;\n\t\t\tvar cont = 1;\n\t\t} else if (stateName == 'cuisine') {\n\t\t\tvar newState = this.state.cuisine;\n\t\t\tvar cont = 1;\n\t\t} else if (stateName == 'mealType') {\n\t\t\tvar newState = this.state.mealType;\n\t\t\tvar cont = 1;\n\t\t}\n\t\tif (cont) {\n\t\t\tif (newState.includes(value)) {\n\t\t\t\tconst index = newState.indexOf(value);\n\t\t\t\tnewState.splice(index, 1);\n\t\t\t} else {\n\t\t\t\tnewState.push(value);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\t[stateName]: newState\n\t\t\t}, console.log(this.state));\n\t\t}\n\n\n\t\t// if searchText\n\t\tif (stateName == 'searchText') {\n\t\t\tthis.setState({\n\t\t\t\t[stateName]: value\n\t\t\t}, console.log(this.state.searchText));\n\t\t}\n\t\t\n\t}\n\n\n\n\n\trender() {\n\t\tconsole.log(this.props.search);\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<div id=\"filter-container\"> \n\n{/*\t\t\t\t\t\t<div id=\"filterSearchContainer\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tplaceholder=\"Keywords\" \n\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\tname=\"searchText\" \n\t\t\t\t\t\t\t\tvalue={this.state.searchText}\n\t\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)} \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button onClick={this.searchFunction} className=\"searchBtn\" type=\"submit\">Search</button>\n\t\t\t\t\t\t</div>*/}\n\n\n\n\t\t\t\t\t\t<div id=\"restrictions-body\">\n\n\t\t\t\t\t\t\t<div className=\"filterDivs\">\n\t\t\t\t\t\t\t\t<span className='restriction-label'>Dietary</span>\n\t\t\t\t\t\t\t\t<MultiSelectMenu \n\t\t\t\t\t\t\t\t\tname='diet'\n\t\t\t\t\t\t\t\t\toptions={dietOptions}\n\t\t\t\t\t\t\t\t\tstate={this.state.diet}\n\t\t\t\t\t\t\t\t\thandleInput={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className=\"filterDivs\">\n\t\t\t\t\t \t\t\t<span className='restriction-label'>Time</span>\n\t\t\t\t\t\t\t\t<label className=\"check-container\"> \n\t\t\t\t\t\t\t\t\t<span className='lt-sym'>&lt;</span> 30 min\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\tname=\"time\" \n\t\t\t\t\t\t\t\t\t\tvalue='30' \n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.time === \"30\"} \n\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<label className=\"check-container\"> \n\t\t\t\t\t\t\t\t\t<span className='lt-sym'>&lt;</span> 45 min\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\tname=\"time\" \n\t\t\t\t\t\t\t\t\t\tvalue=\"45\" \n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.time === \"45\"}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<label className=\"check-container\"> \n\t\t\t\t\t\t\t\t\t<span className='lt-sym'>&lt;</span> 60 min\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\tname=\"time\" \n\t\t\t\t\t\t\t\t\t\tvalue=\"60\" \n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.time === \"60\"} \n\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t\t\t</label> \n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className=\"filterDivs\">\n\t\t\t\t\t\t\t\t<span className='restriction-label dropMenu-label'>Culinary</span>\n\t\t\t\t\t\t\t\t<DropMenu \n\t\t\t\t\t\t\t\t\tname='cuisine'\n\t\t\t\t\t\t\t\t\toptions={cuisine} \n\t\t\t\t\t\t\t\t\thandleInput = {(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t\tstate={this.state.cuisine}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className=\"filterDivs\">\n\t\t\t\t\t\t\t\t<span className='restriction-label dropMenu-label'>Meal Type</span>\n\t\t\t\t\t\t\t\t<DropMenu \n\t\t\t\t\t\t\t\t\tname='mealType'\n\t\t\t\t\t\t\t\t\toptions={mealTypes} \n\t\t\t\t\t\t\t\t\thandleInput = {(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t\tstate={this.state.mealType}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\n\n\t\t\t\t<ShowResults isLoaded={this.state.isLoaded} error={this.state.error} results={this.state.results} />\n\t\t\t\n\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\n\n\n\n\n\n\n\nexport default Searchpage;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/components/multiSelectMenu.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isChecked(option, state) {\n  if (state.includes(option)) {\n    return 'checked';\n  }\n}\n\nfunction MultiSelectMenu(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: props.options.map((option, index) => {\n      /*#__PURE__*/\n      _jsxDEV(\"label\", {\n        className: \"check-container\",\n        children: [option, /*#__PURE__*/_jsxDEV(\"input\", { ...isChecked(option, props.state),\n          name: props.name,\n          type: \"checkbox\",\n          value: option,\n          onChange: props.handleInput // the event object needs to be passed this way if a child component is calling a parent function\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MultiSelectMenu;\nexport default MultiSelectMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectMenu\");","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/components/multiSelectMenu.jsx"],"names":["React","isChecked","option","state","includes","MultiSelectMenu","props","options","map","index","name","handleInput"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;AACjC,MAAIA,KAAK,CAACC,QAAN,CAAeF,MAAf,CAAJ,EAA4B;AAC3B,WAAO,SAAP;AACA;AACD;;AAED,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAE/B,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,cAEEA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,CAACN,MAAD,EAASO,KAAT,KAAmB;AACpC;AAAA;AAAmB,QAAA,SAAS,EAAC,iBAA7B;AAAA,mBACEP,MADF,eAEC,sBACKD,SAAS,CAACC,MAAD,EAASI,KAAK,CAACH,KAAf,CADd;AAEC,UAAA,IAAI,EAAEG,KAAK,CAACI,IAFb;AAGC,UAAA,IAAI,EAAC,UAHN;AAIC,UAAA,KAAK,EAAER,MAJR;AAKC,UAAA,QAAQ,EAAEI,KAAK,CAACK,WALjB,CAK8B;;AAL9B;AAAA;AAAA;AAAA;AAAA,gBAFD,eASC;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA,SAAYF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAWA,KAZD;AAFF;AAAA;AAAA;AAAA;AAAA,UADD;AAmBA;;KArBQJ,e;AAyBT,eAAeA,eAAf","sourcesContent":["import React from \"react\";\n\n\nfunction isChecked(option, state) {\n\tif (state.includes(option)) {\n\t\treturn 'checked';\n\t}\n}\n\nfunction MultiSelectMenu(props) {\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{\n\t\t\t\tprops.options.map((option, index) => {\n\t\t\t\t\t<label key={index} className=\"check-container\"> \n\t\t\t\t\t\t{option}\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t{...isChecked(option, props.state)}\n\t\t\t\t\t\t\tname={props.name} \n\t\t\t\t\t\t\ttype='checkbox' \n\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\tonChange={props.handleInput} // the event object needs to be passed this way if a child component is calling a parent function\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t</label> \n\t\t\t\t})\n\t\t\t}\n\t\t</React.Fragment>\n\t)\n}\n\n\n\nexport default MultiSelectMenu;"]},"metadata":{},"sourceType":"module"}
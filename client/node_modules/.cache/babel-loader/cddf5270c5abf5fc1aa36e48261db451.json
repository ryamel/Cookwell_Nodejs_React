{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/components/handleError.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './handleError.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HandleError(props) {\n  _s();\n\n  const [errMsg, setErrMsg] = useState('');\n  setErrMsg(props.errMsg); // useEffect(() => {\n  // \tconsole.log('re-render');\n  // }, [props.errMsg])\n\n  if (errMsg.length > 0) {\n    const timer = setTimeout(() => {\n      setErrMsg('');\n    }, 5500);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bannerMsgBar\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(HandleError, \"ur5ghv82WkntE4U0YDEnqX0hIp0=\");\n\n_c = HandleError;\nexport default HandleError;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleError\");","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/components/handleError.jsx"],"names":["React","useState","useEffect","HandleError","props","errMsg","setErrMsg","length","timer","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAK,EAAAA,SAAS,CAACF,KAAK,CAACC,MAAP,CAAT,CAH2B,CAK3B;AACA;AACA;;AAEA,MAAIA,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACtB,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC9BH,MAAAA,SAAS,CAAC,EAAD,CAAT;AACA,KAFuB,EAErB,IAFqB,CAAxB;AAIA,wBAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAND,MAMO;AACN,WAAO,IAAP;AACA;AACD;;GAlBQF,W;;KAAAA,W;AAoBT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './handleError.sass';\n\nfunction HandleError(props) {\n\tconst [errMsg, setErrMsg] = useState('');\n\n\tsetErrMsg(props.errMsg);\n\n\t// useEffect(() => {\n\t// \tconsole.log('re-render');\n\t// }, [props.errMsg])\n\n\tif (errMsg.length > 0) {\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetErrMsg('');\n\t\t}, 5500);\n\n\t\treturn <div className='bannerMsgBar'>{errMsg}</div>;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport default HandleError;"]},"metadata":{},"sourceType":"module"}
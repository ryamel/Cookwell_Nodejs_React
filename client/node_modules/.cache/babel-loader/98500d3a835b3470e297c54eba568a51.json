{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/cookwell-react-express/client/src/pages/account-pages/submit-recipe.jsx\";\nimport React from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { mealTypes, dietOptions, cuisine } from '../../searchOptions';\nimport './submit-recipe.sass';\nimport axios from 'axios';\nimport photoIcon from '../../media/icons/photo45.png';\nimport DropMenu from '../../components/dropMenu';\nimport MultiSelectMenu from '../../components/multiSelectMenu';\nimport Ingredients from '../../components/ingredients';\nimport Methods from '../../components/method';\nimport Notes from '../../components/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass submitRecipe extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      authid: '',\n      description: '',\n      mealType: '',\n      diet: [],\n      cuisine: [],\n      servings: '',\n      cookTime: null,\n      ingredients: [{\n        gtext: ' ',\n        qty: ' ',\n        unit: ' '\n      }],\n      method: [''],\n      notes: [{\n        note: '',\n        stepNum: ''\n      }],\n      edit: false,\n      selectedFile: null,\n      fileName: null,\n      error: null\n    };\n    this.fileInput = /*#__PURE__*/React.createRef();\n    this.handleInput = this.handleInput.bind(this);\n    this.removeField = this.removeField.bind(this);\n    this.addField = this.addField.bind(this);\n    this.fileHandler = this.fileHandler.bind(this);\n    this.uploadRecipe = this.uploadRecipe.bind(this);\n    this.editMode = this.editMode.bind(this);\n  } // put file into state variable\n\n\n  fileHandler(event) {\n    if (this.fileInput.current.files[0]) {\n      this.setState({\n        fileName: this.fileInput.current.files[0].name,\n        selectedFile: event.target.files[0]\n      }, () => console.log(this.state.selectedFile));\n    }\n  }\n\n  uploadRecipe() {\n    // formData does not suport nested objects, only key/value pairs. \n    // So any nested data was turned into json strings. And then converted into objects on the server side\n    var formData = new FormData();\n    formData.append('file', this.state.selectedFile);\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    formData.append('mealType', this.state.mealType);\n    formData.append('diet', JSON.stringify(this.state.diet));\n    formData.append('cuisine', JSON.stringify(this.state.cuisine));\n    formData.append('servings', this.state.servings);\n    formData.append('cookTime', this.state.cookTime);\n    formData.append('ingredients', JSON.stringify(this.state.ingredients));\n    formData.append('method', JSON.stringify(this.state.method));\n    formData.append('notes', JSON.stringify(this.state.notes)); // const data = new FormData();\n    // formData.append('file', this.state.selectedFile);\n    // formData.append('title', this.state.title);\n\n    fetch('/api/recipes/upload', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err)); //  \t\tconsole.log(this.state);\n    // const postOptions = {\n    //        method: 'POST',\n    //        body: data\n    //    };\n    //   axios.post(\"/recipes/upload\", data, { })\n    // .then(res => { // then print response status\n    // \tconsole.log(res.statusText)\n    // })\n    // axios({\n    // \tmethod: 'post',\n    // \turl: \"/api/recipes/upload\",\n    // \tdata: data\n    // })\n    // .then((data) => console.log(data))\n    // .catch((error) => console.log(error));\n    // fetch(\"/api/recipes/upload\", postOptions)\n    // \t.then(res => res.json())\n    // \t.then(\n    // \t\t(data) => {\n    // \t\t\tconsole.log(data);\n    // \t\t},\n    // \t\t(error) => {\n    // \t\t\tconsole.log('error');\n    // \t\t\tthis.setState({\n    // \t\t\t\terror: error\n    // \t\t\t})\n    // \t\t}\n    // \t)\n  }\n\n  addField(stateName) {\n    var newState = this.state[stateName];\n    stateName == 'ingredients' && newState.push({\n      gtext: '',\n      qty: '',\n      unit: ''\n    });\n    stateName == 'method' && newState.push('');\n    stateName == 'notes' && newState.push({\n      note: '',\n      stepNum: ''\n    });\n    this.setState({\n      [stateName]: newState\n    }, () => console.log(this.state[stateName]));\n  }\n\n  removeField(stateName) {\n    console.log(stateName);\n    var newState = this.state[stateName];\n\n    if (newState.length > 1) {\n      newState.pop();\n      this.setState({\n        [stateName]: newState\n      });\n    }\n  }\n\n  handleInput(fieldName, value, number = null) {\n    // ingredients\n    if (fieldName === 'qty' || fieldName === 'unit' || fieldName === 'gtext') {\n      var newState = this.state.ingredients;\n      newState[parseInt(number)][fieldName] = value;\n      this.setState({\n        ingredients: newState\n      }, () => console.log(this.state.ingredients));\n      return null;\n    } // method\n\n\n    if (fieldName === 'method') {\n      var newState = this.state.method;\n      newState[number] = value;\n      this.setState({\n        method: newState\n      }, () => console.log(this.state.method));\n      return null;\n    } // notes\n\n\n    if (fieldName === 'stepNum') {\n      var newState = this.state.notes;\n      newState[parseInt(number)][fieldName] = parseInt(value);\n      this.setState({\n        notes: newState\n      }, () => console.log(this.state.notes));\n      return null;\n    } else if (fieldName === 'note') {\n      var newState = this.state.notes;\n      newState[parseInt(number)][fieldName] = value;\n      this.setState({\n        notes: newState\n      }, () => console.log(this.state.notes));\n      return null;\n    } // title, description, servings, cookTime, mealType\n\n\n    if (fieldName === 'title' || fieldName === 'description' || fieldName === 'servings' || fieldName === 'cookTime' || fieldName === 'mealType') {\n      var newState = value;\n    } // diet\n\n\n    if (fieldName === 'diet') {\n      var dietArr = this.state.diet;\n      var ind = dietArr.indexOf(value);\n\n      if (!dietArr.includes(value)) {\n        dietArr.push(value);\n        var newState = dietArr;\n      } else {\n        dietArr.splice(ind, 1);\n        var newState = dietArr;\n      }\n    } // cuisine\n\n\n    if (fieldName === 'cuisine') {\n      var cuisineArr = this.state.cuisine;\n      var ind = cuisineArr.indexOf(value);\n\n      if (!cuisineArr.includes(value)) {\n        cuisineArr.push(value);\n        var newState = cuisineArr;\n      } else {\n        cuisineArr.splice(ind, 1);\n        var newState = cuisineArr;\n      }\n    } //update state\n\n\n    this.setState({\n      [fieldName]: newState\n    }, () => console.log(this.state[fieldName]));\n  }\n\n  editMode() {// read url/Link for edit paramaters. (recipeId)\n    // fetch recipe data from server\n    // update state with data\n    // modify render. (Submit button changes, title changes, recipe photo is displayed)\n    // create now route end point to handle update on server\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"submit-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ID: \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 5\n        }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-form-heading\",\n          children: \"EDIT RECIPE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-account-titles\",\n          children: \"Submit Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"req-note\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredStar\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 7\n          }, this), \"Required\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subRec-field-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Photo\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredStar\",\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"fileUploadInput\",\n              ref: this.fileInput,\n              onChange: this.fileHandler,\n              type: \"file\",\n              name: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"phIcon phIcon-submit\",\n              src: photoIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploadText-submit fileUpload\",\n              children: this.state.fileName ? this.state.fileName : 'Upload .png or .jpg file type'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subRec-field-container title clearfix\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Title\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredStar\",\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"titleInput\",\n            type: \"text\",\n            name: \"title\",\n            maxLength: \"80\",\n            value: this.state.title,\n            onChange: e => this.handleInput(e.target.name, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subRec-field-container description clearfix\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredStar\",\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            rows: \"4\",\n            cols: \"54\",\n            maxLength: \"500\",\n            minLength: \"100\" // onkeyup=\"countChar(this)\"\n            ,\n            value: this.state.description,\n            onChange: e => this.handleInput(e.target.name, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"charCount\",\n            children: \"100 to 500 characters (0)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subRec-field-container servings\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Servings\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredStar\",\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"servings\",\n            placeholder: \"example 1-9 persons or 24 Cookies\",\n            maxLength: \"25\",\n            value: this.state.servings,\n            onChange: e => this.handleInput(e.target.name, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subRec-field-container time\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Cook & Preparation Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredStar\",\n              children: \" *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"cookTime-input\",\n            type: \"text\",\n            name: \"cookTime\",\n            placeholder: \"minutes\",\n            maxLength: \"3\",\n            value: this.state.time,\n            onChange: e => this.handleInput(e.target.name, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subRec-field-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-subRec-field-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"subRec-title\",\n              children: [\"Meal Type\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"requiredStar\",\n                children: \" *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 9\n            }, this), mealTypes.map((mealType, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"check-container\",\n              children: [mealType, /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"mealType\",\n                value: mealType,\n                type: \"checkbox\",\n                checked: this.state.mealType === mealType,\n                onChange: e => this.handleInput(e.target.name, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 11\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 10\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-subRec-field-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"subRec-title\",\n              children: \"Cuisine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(MultiSelectMenu, {\n              name: \"cuisine\",\n              options: cuisine,\n              handleInput: e => this.handleInput(e.target.name, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-subRec-field-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"subRec-title\",\n              children: \"Dietary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(MultiSelectMenu, {\n              name: \"diet\",\n              options: dietOptions,\n              handleInput: e => this.handleInput(e.target.name, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Ingredients, {\n          addField: this.addField,\n          ingredients: this.state.ingredients,\n          handleInput: this.handleInput,\n          removeField: this.removeField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Methods, {\n          addField: this.addField,\n          removeField: this.removeField,\n          handleInput: this.handleInput,\n          methods: this.state.method\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Notes, {\n          addField: this.addField,\n          removeField: this.removeField,\n          handleInput: this.handleInput,\n          notes: this.state.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitr-btn\",\n          type: \"submit\",\n          name: \"submit\",\n          onClick: this.uploadRecipe,\n          children: \"Submit Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"submit-note\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Once submitted, recipes are reviewed for grammar and clarity.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 73\n            }, this), \"Please be patient while recipies upload.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default submitRecipe;","map":{"version":3,"sources":["/Users/ryan/Documents/cookwell-react-express/client/src/pages/account-pages/submit-recipe.jsx"],"names":["React","Link","useParams","mealTypes","dietOptions","cuisine","axios","photoIcon","DropMenu","MultiSelectMenu","Ingredients","Methods","Notes","submitRecipe","Component","constructor","state","title","authid","description","mealType","diet","servings","cookTime","ingredients","gtext","qty","unit","method","notes","note","stepNum","edit","selectedFile","fileName","error","fileInput","createRef","handleInput","bind","removeField","addField","fileHandler","uploadRecipe","editMode","event","current","files","setState","name","target","console","log","formData","FormData","append","JSON","stringify","fetch","body","then","res","json","data","catch","err","stateName","newState","push","length","pop","fieldName","value","number","parseInt","dietArr","ind","indexOf","includes","splice","cuisineArr","componentDidMount","render","id","cursor","e","time","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { mealTypes, dietOptions, cuisine } from '../../searchOptions';\nimport './submit-recipe.sass';\nimport axios from 'axios';\n\nimport photoIcon from '../../media/icons/photo45.png';\nimport DropMenu from '../../components/dropMenu';\nimport MultiSelectMenu from '../../components/multiSelectMenu';\nimport Ingredients from '../../components/ingredients';\nimport Methods from '../../components/method';\nimport Notes from '../../components/notes';\n\nclass submitRecipe extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttitle: '',\n\t\t\tauthid: '',\n\t\t\tdescription: '',\n\t\t\tmealType: '',\n\t\t\tdiet: [],\n\t\t\tcuisine: [],\t\n\t\t\tservings: '',\t\t\t\n\t\t\tcookTime: null,\n\t\t\tingredients: [{gtext: ' ', qty: ' ', unit: ' '}],\n\t\t\tmethod: [''],\n\t\t\tnotes: [{note: '', stepNum: ''}],\n\t\t\tedit: false,\n\t\t\tselectedFile: null,\n\t\t\tfileName: null,\n\t\t\terror: null,\n\t\t};\n\n\t\tthis.fileInput = React.createRef();\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.removeField = this.removeField.bind(this);\n\t\tthis.addField = this.addField.bind(this);\n\t\tthis.fileHandler = this.fileHandler.bind(this);\n\t\tthis.uploadRecipe = this.uploadRecipe.bind(this);\n\t\tthis.editMode = this.editMode.bind(this);\n\t}\n\n\t// put file into state variable\n\tfileHandler(event) {\n\t\tif (this.fileInput.current.files[0]) {\n\t   \t\tthis.setState({\n\t   \t\t\tfileName: this.fileInput.current.files[0].name,\n\t\t\t\tselectedFile: event.target.files[0]\n\t\t\t}, () => console.log(this.state.selectedFile))\n\t   \t}\n\t}\n\n\tuploadRecipe() {\n\n\n\t\t// formData does not suport nested objects, only key/value pairs. \n\t\t// So any nested data was turned into json strings. And then converted into objects on the server side\n\n\t\tvar formData = new FormData();\n   \t\tformData.append('file', this.state.selectedFile);\n   \t\tformData.append('title', this.state.title);\n   \t\tformData.append('description', this.state.description);\n   \t\tformData.append('mealType', this.state.mealType);\n   \t\tformData.append('diet', JSON.stringify(this.state.diet));\n   \t\tformData.append('cuisine', JSON.stringify(this.state.cuisine));\n   \t\tformData.append('servings', this.state.servings);\n   \t\tformData.append('cookTime', this.state.cookTime);\n   \t\tformData.append('ingredients', JSON.stringify(this.state.ingredients));\n   \t\tformData.append('method', JSON.stringify(this.state.method));\n   \t\tformData.append('notes', JSON.stringify(this.state.notes));\n\n\n\n\t\t// const data = new FormData();\n\t\t// formData.append('file', this.state.selectedFile);\n\t\t// formData.append('title', this.state.title);\n\n\t\tfetch('/api/recipes/upload', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(data => console.log(data))\n\t\t.catch(err => console.log(err));\n\t\n\n  //  \t\tconsole.log(this.state);\n\t\t// const postOptions = {\n\t //        method: 'POST',\n\t //        body: data\n\t //    };\n\n\n\t  //   axios.post(\"/recipes/upload\", data, { })\n\t\t\t// .then(res => { // then print response status\n\t\t\t// \tconsole.log(res.statusText)\n\t\t\t// })\n\n\t\t// axios({\n\t\t// \tmethod: 'post',\n\t\t// \turl: \"/api/recipes/upload\",\n\t\t// \tdata: data\n\t\t// })\n\t\t// .then((data) => console.log(data))\n\t\t// .catch((error) => console.log(error));\n\n\n\n\t\t// fetch(\"/api/recipes/upload\", postOptions)\n\t\t// \t.then(res => res.json())\n\t\t// \t.then(\n\t\t// \t\t(data) => {\n\t\t// \t\t\tconsole.log(data);\n\t\t// \t\t},\n\t\t// \t\t(error) => {\n\t\t// \t\t\tconsole.log('error');\n\t\t// \t\t\tthis.setState({\n\t\t// \t\t\t\terror: error\n\t\t// \t\t\t})\n\t\t// \t\t}\n\t\t// \t)\n\n\n\n\n\t}\n\n\n\n\taddField(stateName) {\n\t\tvar newState = this.state[stateName];\n\t\tstateName == 'ingredients' && newState.push( {gtext: '', qty: '', unit: ''} )\n\t\tstateName == 'method' && newState.push('')\n\t\tstateName == 'notes' && newState.push({note: '', stepNum: ''})\n\t\tthis.setState({[stateName]: newState}, () => console.log(this.state[stateName]));\n\t}\n\n\tremoveField(stateName) {\n\t\tconsole.log(stateName);\n\t\tvar newState = this.state[stateName];\n\t\tif (newState.length > 1) {\n\t\t\tnewState.pop();\n\t\t\tthis.setState({[stateName]: newState});\n\t\t}\n\t}\n\n\n\thandleInput(fieldName, value, number = null) {\n\n\t\t// ingredients\n\t\tif (fieldName === 'qty' || fieldName === 'unit' || fieldName === 'gtext') {\n\t\t\tvar newState = this.state.ingredients;\n\t\t\tnewState[parseInt(number)][fieldName] = value;\n\t\t\tthis.setState({ingredients: newState}, () => console.log(this.state.ingredients));\t\n\t\t\treturn null;\n\t\t}\n\n\t\t// method\n\t\tif (fieldName === 'method') {\n\t\t\tvar newState = this.state.method;\n\t\t\tnewState[number] = value;\n\t\t\tthis.setState({method: newState}, () => console.log(this.state.method));\t\n\t\t\treturn null;\n\t\t}\n\n\t\t// notes\n\t\tif (fieldName === 'stepNum') {\n\t\t\tvar newState = this.state.notes;\n\t\t\tnewState[parseInt(number)][fieldName] = parseInt(value);\n\t\t\tthis.setState({notes: newState}, () => console.log(this.state.notes));\t\n\t\t\treturn null;\n\t\t} else if (fieldName === 'note') {\n\t\t\tvar newState = this.state.notes;\n\t\t\tnewState[parseInt(number)][fieldName] = value;\n\t\t\tthis.setState({notes: newState}, () => console.log(this.state.notes));\t\n\t\t\treturn null;\n\t\t}\n\n\n\t\t// title, description, servings, cookTime, mealType\n\t\tif (fieldName === 'title' || fieldName === 'description' || fieldName === 'servings' || fieldName === 'cookTime' || fieldName === 'mealType') {\n\t\t\tvar newState = value;\n\t\t}\n\n\t\t// diet\n\t\tif (fieldName === 'diet') {\n\t\t\tvar dietArr = this.state.diet;\n\t\t\tvar ind = dietArr.indexOf(value);\n\t\t\tif (!dietArr.includes(value)) {\n\t\t\t\tdietArr.push(value);\n\t\t\t\tvar newState = dietArr;\n\t\t\t} else {\n\t\t\t\tdietArr.splice(ind, 1);\n\t\t\t\tvar newState = dietArr;\n\t\t\t}\n\t\t}\n\n\n\t\t// cuisine\n\t\tif (fieldName === 'cuisine') {\n\t\t\tvar cuisineArr = this.state.cuisine;\n\t\t\tvar ind = cuisineArr.indexOf(value);\n\t\t\tif (!cuisineArr.includes(value)) {\n\t\t\t\tcuisineArr.push(value);\n\t\t\t\tvar newState = cuisineArr;\n\t\t\t} else {\n\t\t\t\tcuisineArr.splice(ind, 1);\n\t\t\t\tvar newState = cuisineArr;\n\t\t\t}\n\t\t}\n\n\n\t\t//update state\n\t\tthis.setState({\n\t\t\t[fieldName]: newState\n\t\t}, () => console.log(this.state[fieldName]));\n\n\n\t}\n\n\teditMode() {\n\t\t// read url/Link for edit paramaters. (recipeId)\n\n\t\t// fetch recipe data from server\n\n\t\t// update state with data\n\n\t\t// modify render. (Submit button changes, title changes, recipe photo is displayed)\n\n\t\t// create now route end point to handle update on server\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t}\n\n\n\trender() {\n\n\t\t\n\n\t\treturn (\n\n\t\t\t<div className=\"accountContent\">\n\t  \n\t\t\t\t<div id=\"submit-container\">\n\t\t\t\t<div>ID: {id}</div>\n\n\n{/*\t            <button type='submit' name='deleteSubmit' id='deleteRecipe'>\n\t\t            \tDelete Recipe\n\t\t            </button>\n\n\t\t           <div id='overlayDelete'></div>\n\n\t\t            <div id='DeleteForm'>\n\t\t               <p>Are you sure you want to delete INSERT RECIPE ? <br/> (this cannot be undone)</p>\n\t\t               <div>\n\t\t                  <form action='includes/deleteRecipe.php' method='POST'>\n\t\t                     <input type='hidden' name='rls' value='' autocomplete='off' />\n\t\t                     <button type='submit' name='confirmDelete'>Delete</button>\n\t\t                     <button type='button' id='back'>Back</button>\n\t\t                  </form>\n\t\t               </div>\n\t\t            </div>*/}\n\n\t\t            {\n\t\t            \tthis.state.edit\n\t\t            \t? <div className='submit-form-heading'>EDIT RECIPE</div>\n\t\t            \t: <div className='my-account-titles'>Submit Recipe</div>\t\t            \t\n\t\t            }\n\n\t\t            <div id=\"req-note\">\n\t\t\t\t\t\t<span className=\"requiredStar\">*</span> \n\t\t\t\t\t\tRequired\n\t\t\t\t\t</div>\n\n\t\t          \n{/*\t\t\t\t\t<div className='subRec-field-container'>\n\t\t\t\t\t\t<label className='uploadPhoto'>\n\t\t\t\t\t\t\tRecipe Photo\n\t\t\t\t\t\t\t<span className='requiredStar'> *</span> \n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input className='fileUploadInput' type='file' name='file' />\n\t\t\t\t\t\t<img id='profileImg-Rec' style='display: none;' src='#' />\n\t\t\t\t\t\t<img className='phIcon' src={photoIcon} />\n\t\t\t\t\t\t<div id='image-holder'>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n*/}\n\t\t\t\t\t\n\t\t\t\t\t\n\n\n\t\t\t\t\t<div className='subRec-field-container'>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tPhoto\n\t\t\t\t\t\t\t<span className='requiredStar'> *</span> \n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label style={{cursor: 'pointer'}}>\n\t\t\t\t\t\t\t<input className='fileUploadInput' ref={this.fileInput} onChange={this.fileHandler} type='file' name='file' />\n\t\t\t\t\t\t\t<img className='phIcon phIcon-submit' src={photoIcon} />\n\t\t\t\t\t\t\t<div className='uploadText-submit fileUpload'>\n\t\t\t\t\t\t\t\t{ this.state.fileName ? this.state.fileName : 'Upload .png or .jpg file type'  }\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t               \n\n\n\t\t          \n\t\t\t\t\t\n\n\t\t\t\t\t<div className=\"subRec-field-container title clearfix\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t<span className=\"requiredStar\"> *</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tid=\"titleInput\" \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tname=\"title\" \n\t\t\t\t\t\t\tmaxLength=\"80\" \n\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"subRec-field-container description clearfix\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t<span className=\"requiredStar\"> *</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<textarea \n\t\t\t\t\t\t\tname=\"description\" \n\t\t\t\t\t\t\trows=\"4\" \n\t\t\t\t\t\t\tcols=\"54\" \n\t\t\t\t\t\t\tmaxLength=\"500\" \n\t\t\t\t\t\t\tminLength=\"100\" \n\t\t\t\t\t\t\t// onkeyup=\"countChar(this)\"\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</textarea>\n\t\t\t\t\t\t<div id=\"charCount\">\n\t\t\t\t\t\t\t100 to 500 characters (0)\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\n\n\n\t\t\t\t\t<div className=\"subRec-field-container servings\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tServings\n\t\t\t\t\t\t\t<span className=\"requiredStar\"> *</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tname=\"servings\"\n\t\t\t\t\t\t\tplaceholder='example 1-9 persons or 24 Cookies' \n\t\t\t\t\t\t\tmaxLength=\"25\" \n\t\t\t\t\t\t\tvalue={this.state.servings}\n\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\n\t\t            <div className=\"subRec-field-container time\">\n\t\t               \t<label>\n\t\t               \t\tCook & Preparation Time\n\t\t               \t\t<span className=\"requiredStar\"> *</span>\n\t\t               \t</label>\n\t\t            \t<input \n\t\t            \t\tclassName=\"cookTime-input\" \n\t\t            \t\ttype=\"text\" \n\t\t            \t\tname=\"cookTime\" \n\t\t            \t\tplaceholder='minutes'\n\t\t            \t\tmaxLength=\"3\" \n\t\t            \t\tvalue={this.state.time}\n\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t            \t\t/>\n\t\t            </div>\n\n\n\n\t\t\t\t\t<div className=\"subRec-field-container\">\n\t\t\t\t\t\t<div className=\"sub-subRec-field-container\">\n\n\t\t\t\t \t\t\t<label className='subRec-title'>\n\t\t\t\t\t\t\t\tMeal Type\n\t\t\t\t\t\t\t\t<span className=\"requiredStar\"> *</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\tmealTypes.map((mealType, index) => \n\t\t\t\t\t\t\t\t\t<label key={index} className=\"check-container\">\n\t\t\t\t\t\t\t\t\t\t{mealType}\n\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\tname=\"mealType\" \n\t\t\t\t\t\t\t\t\t\t\tvalue={mealType} \n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.mealType === mealType} \n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div className=\"sub-subRec-field-container\">\n\t\t\t\t\t\t\t<label className='subRec-title'>\n\t\t\t\t\t\t\t\tCuisine\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<MultiSelectMenu \n\t\t\t\t\t\t\t\tname='cuisine'\n\t\t\t\t\t\t\t\toptions={cuisine}\n\t\t\t\t\t\t\t\thandleInput={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div className=\"sub-subRec-field-container\">\n\t\t\t\t\t\t\t<label className='subRec-title'>\n\t\t\t\t\t\t\t\tDietary\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<MultiSelectMenu \n\t\t\t\t\t\t\t\tname='diet'\n\t\t\t\t\t\t\t\toptions={dietOptions}\n\t\t\t\t\t\t\t\thandleInput={(e) => this.handleInput(e.target.name, e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t<Ingredients \n\t\t\t\t\t\taddField={this.addField} \n\t\t\t\t\t\tingredients={this.state.ingredients} \n\t\t\t\t\t\thandleInput={this.handleInput} \n\t\t\t\t\t\tremoveField={this.removeField}\n\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t<Methods\n\t\t\t\t\t\taddField={this.addField}\n\t\t\t\t\t\tremoveField={this.removeField}\n\t\t\t\t\t\thandleInput={this.handleInput}\n\t\t\t\t\t\tmethods={this.state.method}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t<Notes \n\t\t\t\t\t\taddField={this.addField}\n\t\t\t\t\t\tremoveField={this.removeField}\n\t\t\t\t\t\thandleInput={this.handleInput}\n\t\t\t\t\t\tnotes={this.state.notes}\n\t\t\t\t\t\t/>\n\n\n\n\n\n\t\t           {/* <button className=\"submitr-btn\" type=\"submit\" name=\"submit_edit\">Save Changes</button>*/}\n\n\t\t            <button className=\"submitr-btn\" type=\"submit\" name=\"submit\" onClick={this.uploadRecipe}>Submit Recipe</button>\n\t\t   \n\n\n\n\t\t\t\t\t<div id=\"submit-note\">\n\t\t\t\t\t\t<div>Once submitted, recipes are reviewed for grammar and clarity.<br/>Please be patient while recipies upload.</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n\n\nexport default submitRecipe;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}